/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface TinyOpenSeaInterface extends ethers.utils.Interface {
  functions: {
    "buyListing(uint256)": FunctionFragment;
    "connectedWorld()": FunctionFragment;
    "createListing(uint256,uint256)": FunctionFragment;
    "deleteListing(uint256)": FunctionFragment;
    "tileABI(tuple)": FunctionFragment;
    "tileDescription(tuple)": FunctionFragment;
    "tileEmoji(tuple)": FunctionFragment;
    "tileName(tuple)": FunctionFragment;
    "tinyFish()": FunctionFragment;
    "viewShop()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "buyListing",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "connectedWorld",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "createListing",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "deleteListing",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tileABI",
    values: [{ x: BigNumberish; y: BigNumberish }]
  ): string;
  encodeFunctionData(
    functionFragment: "tileDescription",
    values: [{ x: BigNumberish; y: BigNumberish }]
  ): string;
  encodeFunctionData(
    functionFragment: "tileEmoji",
    values: [{ x: BigNumberish; y: BigNumberish }]
  ): string;
  encodeFunctionData(
    functionFragment: "tileName",
    values: [{ x: BigNumberish; y: BigNumberish }]
  ): string;
  encodeFunctionData(functionFragment: "tinyFish", values?: undefined): string;
  encodeFunctionData(functionFragment: "viewShop", values?: undefined): string;

  decodeFunctionResult(functionFragment: "buyListing", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "connectedWorld",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createListing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deleteListing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tileABI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tileDescription",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tileEmoji", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "tileName", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "tinyFish", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "viewShop", data: BytesLike): Result;

  events: {};
}

export class TinyOpenSea extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: TinyOpenSeaInterface;

  functions: {
    buyListing(
      fishID: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "buyListing(uint256)"(
      fishID: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    connectedWorld(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "connectedWorld()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    createListing(
      fishID: BigNumberish,
      price: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createListing(uint256,uint256)"(
      fishID: BigNumberish,
      price: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    deleteListing(
      fishID: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "deleteListing(uint256)"(
      fishID: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    tileABI(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "tileABI(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    tileDescription(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "tileDescription(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    tileEmoji(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "tileEmoji(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    tileName(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "tileName(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    tinyFish(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "tinyFish()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    viewShop(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;

    "viewShop()"(overrides?: CallOverrides): Promise<{
      0: string[];
    }>;
  };

  buyListing(
    fishID: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "buyListing(uint256)"(
    fishID: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  connectedWorld(overrides?: CallOverrides): Promise<string>;

  "connectedWorld()"(overrides?: CallOverrides): Promise<string>;

  createListing(
    fishID: BigNumberish,
    price: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createListing(uint256,uint256)"(
    fishID: BigNumberish,
    price: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  deleteListing(
    fishID: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "deleteListing(uint256)"(
    fishID: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  tileABI(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<string>;

  "tileABI(tuple)"(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<string>;

  tileDescription(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<string>;

  "tileDescription(tuple)"(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<string>;

  tileEmoji(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<string>;

  "tileEmoji(tuple)"(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<string>;

  tileName(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<string>;

  "tileName(tuple)"(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<string>;

  tinyFish(overrides?: CallOverrides): Promise<string>;

  "tinyFish()"(overrides?: CallOverrides): Promise<string>;

  viewShop(overrides?: CallOverrides): Promise<string[]>;

  "viewShop()"(overrides?: CallOverrides): Promise<string[]>;

  callStatic: {
    buyListing(fishID: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "buyListing(uint256)"(
      fishID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    connectedWorld(overrides?: CallOverrides): Promise<string>;

    "connectedWorld()"(overrides?: CallOverrides): Promise<string>;

    createListing(
      fishID: BigNumberish,
      price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "createListing(uint256,uint256)"(
      fishID: BigNumberish,
      price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    deleteListing(
      fishID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "deleteListing(uint256)"(
      fishID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    tileABI(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<string>;

    "tileABI(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<string>;

    tileDescription(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<string>;

    "tileDescription(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<string>;

    tileEmoji(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<string>;

    "tileEmoji(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<string>;

    tileName(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<string>;

    "tileName(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<string>;

    tinyFish(overrides?: CallOverrides): Promise<string>;

    "tinyFish()"(overrides?: CallOverrides): Promise<string>;

    viewShop(overrides?: CallOverrides): Promise<string[]>;

    "viewShop()"(overrides?: CallOverrides): Promise<string[]>;
  };

  filters: {};

  estimateGas: {
    buyListing(
      fishID: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "buyListing(uint256)"(
      fishID: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    connectedWorld(overrides?: CallOverrides): Promise<BigNumber>;

    "connectedWorld()"(overrides?: CallOverrides): Promise<BigNumber>;

    createListing(
      fishID: BigNumberish,
      price: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createListing(uint256,uint256)"(
      fishID: BigNumberish,
      price: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    deleteListing(
      fishID: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "deleteListing(uint256)"(
      fishID: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    tileABI(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tileABI(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tileDescription(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tileDescription(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tileEmoji(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tileEmoji(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tileName(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tileName(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tinyFish(overrides?: CallOverrides): Promise<BigNumber>;

    "tinyFish()"(overrides?: CallOverrides): Promise<BigNumber>;

    viewShop(overrides?: CallOverrides): Promise<BigNumber>;

    "viewShop()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    buyListing(
      fishID: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "buyListing(uint256)"(
      fishID: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    connectedWorld(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "connectedWorld()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    createListing(
      fishID: BigNumberish,
      price: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createListing(uint256,uint256)"(
      fishID: BigNumberish,
      price: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    deleteListing(
      fishID: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "deleteListing(uint256)"(
      fishID: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    tileABI(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tileABI(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tileDescription(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tileDescription(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tileEmoji(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tileEmoji(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tileName(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tileName(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tinyFish(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "tinyFish()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    viewShop(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "viewShop()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
