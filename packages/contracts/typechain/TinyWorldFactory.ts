/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorld } from "./TinyWorld";

export class TinyWorldFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TinyWorld> {
    return super.deploy(overrides || {}) as Promise<TinyWorld>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorld {
    return super.attach(address) as TinyWorld;
  }
  connect(signer: Signer): TinyWorldFactory {
    return super.connect(signer) as TinyWorldFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorld {
    return new Contract(address, _abi, signerOrProvider) as TinyWorld;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum TileType",
        name: "tileType",
        type: "uint8",
      },
    ],
    name: "TileUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "originalTileType",
            type: "uint8",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "originalTileType",
            type: "uint8",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldWidth",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "publicSignals",
        type: "uint256[4]",
      },
    ],
    name: "proveTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedTiles",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "originalTileType",
        type: "uint8",
      },
      {
        internalType: "enum TileType",
        name: "currentTileType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d41806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063dd96353111610066578063dd96353114610100578063e4a3011614610123578063ea58cb2314610136578063f276dc891461014b578063f2fde38b1461016b57600080fd5b80634400d97e146100a3578063715018a6146100bf5780637d94792a146100c95780638da5cb5b146100d2578063cd28e8cb146100ed575b600080fd5b6100ac60665481565b6040519081526020015b60405180910390f35b6100c761017e565b005b6100ac60655481565b6033546040516001600160a01b0390911681526020016100b6565b6100c76100fb366004610a50565b6101e9565b61011361010e366004610b3a565b610460565b6040516100b69493929190610c72565b6100c7610131366004610b52565b61049f565b61013e61051f565b6040516100b69190610bc8565b61015e610159366004610b52565b61063c565b6040516100b69190610c64565b6100c7610179366004610a22565b610725565b6033546001600160a01b031633146101dd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101e760006107f0565b565b8051602082015160408301516060840151600090600281111561021c57634e487b7160e01b600052602160045260246000fd5b9050606654841061022c57600080fd5b606654831061023a57600080fd5b606554821461024857600080fd5b6000604051806080016040528086815260200185815260200183600281111561028157634e487b7160e01b600052602160045260246000fd5b81526020018360028111156102a657634e487b7160e01b600052602160045260246000fd5b9052600086815260676020908152604080832088845282529182902083518155908301516001808301919091559183015160028083018054959650869593949293909260ff1990911691849081111561030f57634e487b7160e01b600052602160045260246000fd5b021790555060608201518160020160016101000a81548160ff0219169083600281111561034c57634e487b7160e01b600052602160045260246000fd5b021790555050606880546001808201835560009290925283517fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c22097753600390920291820190815560208501517fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c2209775483015560408501517fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c2209775590920180548695509193909160ff19169083600281111561041157634e487b7160e01b600052602160045260246000fd5b021790555060608201518160020160016101000a81548160ff0219169083600281111561044e57634e487b7160e01b600052602160045260246000fd5b02179055505050505050505050505050565b6068818154811061047057600080fd5b600091825260209091206003909102018054600182015460029092015490925060ff8082169161010090041684565b600054610100900460ff16806104b8575060005460ff16155b6104d45760405162461bcd60e51b81526004016101d490610c16565b600054610100900460ff161580156104f6576000805461ffff19166101011790555b6104fe610842565b60658390556066829055801561051a576000805461ff00191690555b505050565b60606068805480602002602001604051908101604052809291908181526020016000905b82821015610633578382906000526020600020906003020160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1660028111156105ac57634e487b7160e01b600052602160045260246000fd5b60028111156105cb57634e487b7160e01b600052602160045260246000fd5b81526020016002820160019054906101000a900460ff16600281111561060157634e487b7160e01b600052602160045260246000fd5b600281111561062057634e487b7160e01b600052602160045260246000fd5b8152505081526020019060010190610543565b50505050905090565b610644610987565b6000838152606760209081526040808320858452825291829020825160808101845281548152600182015492810192909252600280820154929391929184019160ff16908111156106a557634e487b7160e01b600052602160045260246000fd5b60028111156106c457634e487b7160e01b600052602160045260246000fd5b81526020016002820160019054906101000a900460ff1660028111156106fa57634e487b7160e01b600052602160045260246000fd5b600281111561071957634e487b7160e01b600052602160045260246000fd5b90525090505b92915050565b6033546001600160a01b0316331461077f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101d4565b6001600160a01b0381166107e45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101d4565b6107ed816107f0565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff168061085b575060005460ff16155b6108775760405162461bcd60e51b81526004016101d490610c16565b600054610100900460ff16158015610899576000805461ffff19166101011790555b6108a16108bd565b6108a9610927565b80156107ed576000805461ff001916905550565b600054610100900460ff16806108d6575060005460ff16155b6108f25760405162461bcd60e51b81526004016101d490610c16565b600054610100900460ff161580156108a9576000805461ffff191661010117905580156107ed576000805461ff001916905550565b600054610100900460ff1680610940575060005460ff16155b61095c5760405162461bcd60e51b81526004016101d490610c16565b600054610100900460ff1615801561097e576000805461ffff19166101011790555b6108a9336107f0565b60405180608001604052806000815260200160008152602001600060028111156109c157634e487b7160e01b600052602160045260246000fd5b81526020016000905290565b600082601f8301126109dd578081fd5b6109e5610ca3565b8083856040860111156109f6578384fd5b835b6002811015610a175781358452602093840193909101906001016109f8565b509095945050505050565b600060208284031215610a33578081fd5b81356001600160a01b0381168114610a49578182fd5b9392505050565b600080600080610180808688031215610a67578384fd5b610a7187876109cd565b9450604087605f880112610a83578485fd5b610a8b610ca3565b8082890160c08a018b811115610a9f578889fd5b885b6002811015610ac857610ab48d846109cd565b855260209094019391850191600101610aa1565b50829850610ad68c826109cd565b975050505050508661011f870112610aec578182fd5b610af4610cda565b80610100880189848a011115610b08578485fd5b8493505b6004841015610b2c57803583526001939093019260209283019201610b0c565b509598949750929550505050565b600060208284031215610b4b578081fd5b5035919050565b60008060408385031215610b64578182fd5b50508035926020909101359150565b60038110610b9157634e487b7160e01b600052602160045260246000fd5b9052565b80518252602081015160208301526040810151610bb56040840182610b73565b50606081015161051a6060840182610b73565b6020808252825182820181905260009190848201906040850190845b81811015610c0a57610bf7838551610b95565b9284019260809290920191600101610be4565b50909695505050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6080810161071f8284610b95565b8481526020810184905260808101610c8d6040830185610b73565b610c9a6060830184610b73565b95945050505050565b6040805190810167ffffffffffffffff81118282101715610cd457634e487b7160e01b600052604160045260246000fd5b60405290565b6040516080810167ffffffffffffffff81118282101715610cd457634e487b7160e01b600052604160045260246000fdfea2646970667358221220504049ca970c7e81714166588a134f83f7ece0f36b97a5ee165ded275b2dec7564736f6c63430008040033";
