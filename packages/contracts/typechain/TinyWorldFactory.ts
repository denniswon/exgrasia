/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorld } from "./TinyWorld";

export class TinyWorldFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TinyWorld> {
    return super.deploy(overrides || {}) as Promise<TinyWorld>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorld {
    return super.attach(address) as TinyWorld;
  }
  connect(signer: Signer): TinyWorldFactory {
    return super.connect(signer) as TinyWorldFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorld {
    return new Contract(address, _abi, signerOrProvider) as TinyWorld;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum TileType",
        name: "tileType",
        type: "uint8",
      },
    ],
    name: "TileUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "originalTileType",
            type: "uint8",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "originalTileType",
            type: "uint8",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldScale",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "publicSignals",
        type: "uint256[4]",
      },
    ],
    name: "proveTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedTiles",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "originalTileType",
        type: "uint8",
      },
      {
        internalType: "enum TileType",
        name: "currentTileType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "worldScale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d81806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063cd28e8cb11610071578063cd28e8cb1461010b578063d13e4f281461011e578063dd96353114610127578063ea58cb231461014a578063f276dc891461015f578063f2fde38b1461017f57600080fd5b80634400d97e146100ae578063715018a6146100ca5780637d94792a146100d457806380d85911146100dd5780638da5cb5b146100f0575b600080fd5b6100b760665481565b6040519081526020015b60405180910390f35b6100d2610192565b005b6100b760655481565b6100d26100eb366004610b83565b6101fd565b6033546040516001600160a01b0390911681526020016100c1565b6100d2610119366004610a60565b610283565b6100b760695481565b61013a610135366004610b4a565b6104f0565b6040516100c19493929190610cb2565b61015261052f565b6040516100c19190610c08565b61017261016d366004610b62565b61064c565b6040516100c19190610ca4565b6100d261018d366004610a32565b610735565b6033546001600160a01b031633146101f15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101fb6000610800565b565b600054610100900460ff1680610216575060005460ff16155b6102325760405162461bcd60e51b81526004016101e890610c56565b600054610100900460ff16158015610254576000805461ffff19166101011790555b61025c610852565b606584905560668390556069829055801561027d576000805461ff00191690555b50505050565b805160208201516040830151606084015160009060058111156102b657634e487b7160e01b600052602160045260246000fd5b905060665484106102c657600080fd5b60665483106102d457600080fd5b60655482146102e257600080fd5b6000604051806080016040528086815260200185815260200183600581111561031b57634e487b7160e01b600052602160045260246000fd5b815260200183600581111561034057634e487b7160e01b600052602160045260246000fd5b90526000868152606760209081526040808320888452825291829020835181559083015160018083019190915591830151600282018054949550859492939192909160ff19909116908360058111156103a957634e487b7160e01b600052602160045260246000fd5b0217905550606082015160028201805461ff0019166101008360058111156103e157634e487b7160e01b600052602160045260246000fd5b021790555050606880546001808201835560009290925283517fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c22097753600390920291820190815560208501517fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c2209775483015560408501517fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c2209775590920180548695509193909160ff1916908360058111156104a657634e487b7160e01b600052602160045260246000fd5b0217905550606082015160028201805461ff0019166101008360058111156104de57634e487b7160e01b600052602160045260246000fd5b02179055505050505050505050505050565b6068818154811061050057600080fd5b600091825260209091206003909102018054600182015460029092015490925060ff8082169161010090041684565b60606068805480602002602001604051908101604052809291908181526020016000905b82821015610643578382906000526020600020906003020160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1660058111156105bc57634e487b7160e01b600052602160045260246000fd5b60058111156105db57634e487b7160e01b600052602160045260246000fd5b81526020016002820160019054906101000a900460ff16600581111561061157634e487b7160e01b600052602160045260246000fd5b600581111561063057634e487b7160e01b600052602160045260246000fd5b8152505081526020019060010190610553565b50505050905090565b610654610997565b60008381526067602090815260408083208584528252918290208251608081018452815481526001820154928101929092526002810154919290919083019060ff1660058111156106b557634e487b7160e01b600052602160045260246000fd5b60058111156106d457634e487b7160e01b600052602160045260246000fd5b81526020016002820160019054906101000a900460ff16600581111561070a57634e487b7160e01b600052602160045260246000fd5b600581111561072957634e487b7160e01b600052602160045260246000fd5b90525090505b92915050565b6033546001600160a01b0316331461078f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101e8565b6001600160a01b0381166107f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101e8565b6107fd81610800565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff168061086b575060005460ff16155b6108875760405162461bcd60e51b81526004016101e890610c56565b600054610100900460ff161580156108a9576000805461ffff19166101011790555b6108b16108cd565b6108b9610937565b80156107fd576000805461ff001916905550565b600054610100900460ff16806108e6575060005460ff16155b6109025760405162461bcd60e51b81526004016101e890610c56565b600054610100900460ff161580156108b9576000805461ffff191661010117905580156107fd576000805461ff001916905550565b600054610100900460ff1680610950575060005460ff16155b61096c5760405162461bcd60e51b81526004016101e890610c56565b600054610100900460ff1615801561098e576000805461ffff19166101011790555b6108b933610800565b60405180608001604052806000815260200160008152602001600060058111156109d157634e487b7160e01b600052602160045260246000fd5b81526020016000905290565b600082601f8301126109ed578081fd5b6109f5610ce3565b808385604086011115610a06578384fd5b835b6002811015610a27578135845260209384019390910190600101610a08565b509095945050505050565b600060208284031215610a43578081fd5b81356001600160a01b0381168114610a59578182fd5b9392505050565b600080600080610180808688031215610a77578384fd5b610a8187876109dd565b9450604087605f880112610a93578485fd5b610a9b610ce3565b8082890160c08a018b811115610aaf578889fd5b885b6002811015610ad857610ac48d846109dd565b855260209094019391850191600101610ab1565b50829850610ae68c826109dd565b975050505050508661011f870112610afc578182fd5b610b04610d1a565b80610100880189848a011115610b18578485fd5b8493505b6004841015610b3c57803583526001939093019260209283019201610b1c565b509598949750929550505050565b600060208284031215610b5b578081fd5b5035919050565b60008060408385031215610b74578182fd5b50508035926020909101359150565b600080600060608486031215610b97578283fd5b505081359360208301359350604090920135919050565b60068110610bcc57634e487b7160e01b600052602160045260246000fd5b9052565b80518252602081015160208301526040810151610bf06040840182610bae565b506060810151610c036060840182610bae565b505050565b6020808252825182820181905260009190848201906040850190845b81811015610c4a57610c37838551610bd0565b9284019260809290920191600101610c24565b50909695505050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6080810161072f8284610bd0565b8481526020810184905260808101610ccd6040830185610bae565b610cda6060830184610bae565b95945050505050565b6040805190810167ffffffffffffffff81118282101715610d1457634e487b7160e01b600052604160045260246000fd5b60405290565b6040516080810167ffffffffffffffff81118282101715610d1457634e487b7160e01b600052604160045260246000fdfea2646970667358221220eca380b7f0fec2d9f241cc6d418487307a419ce723a597e9d8eca92eb055291264736f6c63430008040033";
