/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorld } from "./TinyWorld";

export class TinyWorldFactory extends ContractFactory {
  constructor(
    linkLibraryAddresses: TinyWorldLibraryAddresses,
    signer?: Signer
  ) {
    super(_abi, TinyWorldFactory.linkBytecode(linkLibraryAddresses), signer);
  }

  static linkBytecode(linkLibraryAddresses: TinyWorldLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$262fb0c830dbdf2a376562d26adc520444\\$__", "g"),
      linkLibraryAddresses["__$262fb0c830dbdf2a376562d26adc520444$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(overrides?: Overrides): Promise<TinyWorld> {
    return super.deploy(overrides || {}) as Promise<TinyWorld>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorld {
    return super.attach(address) as TinyWorld;
  }
  connect(signer: Signer): TinyWorldFactory {
    return super.connect(signer) as TinyWorldFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorld {
    return new Contract(address, _abi, signerOrProvider) as TinyWorld;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum TileType",
        name: "tileType",
        type: "uint8",
      },
    ],
    name: "TileUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "originalTileType",
            type: "uint8",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "originalTileType",
            type: "uint8",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldScale",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[8]",
        name: "publicSignals",
        type: "uint256[8]",
      },
    ],
    name: "proveTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedTiles",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "originalTileType",
        type: "uint8",
      },
      {
        internalType: "enum TileType",
        name: "currentTileType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "worldScale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611016806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610103578063d13e4f281461011e578063dd96353114610127578063ea58cb231461014a578063f276dc891461015f578063f2fde38b1461017f57600080fd5b80634400d97e146100ae5780634badb0ab146100ca578063715018a6146100df5780637d94792a146100e757806380d85911146100f0575b600080fd5b6100b760665481565b6040519081526020015b60405180910390f35b6100dd6100d8366004610c0c565b610192565b005b6100dd610504565b6100b760655481565b6100dd6100fe366004610d4f565b61056a565b6033546040516001600160a01b0390911681526020016100c1565b6100b760695481565b61013a610135366004610d16565b6105f0565b6040516100c19493929190610f4f565b61015261062f565b6040516100c19190610e1a565b61017261016d366004610d2e565b61074c565b6040516100c19190610f41565b6100dd61018d366004610bde565b610835565b60405163c26de6cb60e01b815273__$262fb0c830dbdf2a376562d26adc520444$__9063c26de6cb906101cf908790879087908790600401610e68565b60206040518083038186803b1580156101e757600080fd5b505af41580156101fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021f9190610cf6565b6102625760405162461bcd60e51b815260206004820152600f60248201526e4661696c6564205a4b20636865636b60881b60448201526064015b60405180910390fd5b8051602082015160408301516060840151608085015160a086015160c087015160e08801516102988c60005b6020020151610900565b60208b01516102a890600161028e565b60665486106102b657600080fd5b60665485106102c457600080fd5b60695483146102d257600080fd5b60655484146102e057600080fd5b60006102ef8989600114610945565b90506000604051806080016040528089815260200188815260200183600581111561032a57634e487b7160e01b600052602160045260246000fd5b815260200183600581111561034f57634e487b7160e01b600052602160045260246000fd5b905260008981526067602090815260408083208b8452825291829020835181559083015160018083019190915591830151600282018054949550859492939192909160ff19909116908360058111156103b857634e487b7160e01b600052602160045260246000fd5b0217905550606082015160028201805461ff0019166101008360058111156103f057634e487b7160e01b600052602160045260246000fd5b021790555050606880546001808201835560009290925283517fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c22097753600390920291820190815560208501517fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c2209775483015560408501517fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c2209775590920180548695509193909160ff1916908360058111156104b557634e487b7160e01b600052602160045260246000fd5b0217905550606082015160028201805461ff0019166101008360058111156104ed57634e487b7160e01b600052602160045260246000fd5b021790555050505050505050505050505050505050565b6033546001600160a01b0316331461055e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610259565b610568600061098b565b565b600054610100900460ff1680610583575060005460ff16155b61059f5760405162461bcd60e51b815260040161025990610ef3565b600054610100900460ff161580156105c1576000805461ffff19166101011790555b6105c96109dd565b60658490556066839055606982905580156105ea576000805461ff00191690555b50505050565b6068818154811061060057600080fd5b600091825260209091206003909102018054600182015460029092015490925060ff8082169161010090041684565b60606068805480602002602001604051908101604052809291908181526020016000905b82821015610743578382906000526020600020906003020160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1660058111156106bc57634e487b7160e01b600052602160045260246000fd5b60058111156106db57634e487b7160e01b600052602160045260246000fd5b81526020016002820160019054906101000a900460ff16600581111561071157634e487b7160e01b600052602160045260246000fd5b600581111561073057634e487b7160e01b600052602160045260246000fd5b8152505081526020019060010190610653565b50505050905090565b610754610b43565b60008381526067602090815260408083208584528252918290208251608081018452815481526001820154928101929092526002810154919290919083019060ff1660058111156107b557634e487b7160e01b600052602160045260246000fd5b60058111156107d457634e487b7160e01b600052602160045260246000fd5b81526020016002820160019054906101000a900460ff16600581111561080a57634e487b7160e01b600052602160045260246000fd5b600581111561082957634e487b7160e01b600052602160045260246000fd5b90525090505b92915050565b6033546001600160a01b0316331461088f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610259565b6001600160a01b0381166108f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610259565b6108fd8161098b565b50565b6108fd8160405160240161091691815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052610a58565b60006012831180156109545750815b156109615750600361082f565b600f8311156109725750600561082f565b600d8311156109835750600261082f565b50600161082f565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16806109f6575060005460ff16155b610a125760405162461bcd60e51b815260040161025990610ef3565b600054610100900460ff16158015610a34576000805461ffff19166101011790555b610a3c610a79565b610a44610ae3565b80156108fd576000805461ff001916905550565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600054610100900460ff1680610a92575060005460ff16155b610aae5760405162461bcd60e51b815260040161025990610ef3565b600054610100900460ff16158015610a44576000805461ffff191661010117905580156108fd576000805461ff001916905550565b600054610100900460ff1680610afc575060005460ff16155b610b185760405162461bcd60e51b815260040161025990610ef3565b600054610100900460ff16158015610b3a576000805461ffff19166101011790555b610a443361098b565b6040518060800160405280600081526020016000815260200160006005811115610b7d57634e487b7160e01b600052602160045260246000fd5b81526020016000905290565b600082601f830112610b99578081fd5b610ba1610f77565b808385604086011115610bb2578384fd5b835b6002811015610bd3578135845260209384019390910190600101610bb4565b509095945050505050565b600060208284031215610bef578081fd5b81356001600160a01b0381168114610c05578182fd5b9392505050565b600080600080610200808688031215610c23578384fd5b610c2d8787610b89565b9450604087605f880112610c3f578485fd5b610c47610f77565b8082890160c08a018b811115610c5b578889fd5b885b6002811015610c8457610c708d84610b89565b855260209094019391850191600101610c5d565b50829850610c928c82610b89565b975050505050508661011f870112610ca8578182fd5b610cb0610fae565b80610100880189848a011115610cc4578485fd5b8493505b6008841015610ce857803583526001939093019260209283019201610cc8565b509598949750929550505050565b600060208284031215610d07578081fd5b81518015158114610c05578182fd5b600060208284031215610d27578081fd5b5035919050565b60008060408385031215610d40578182fd5b50508035926020909101359150565b600080600060608486031215610d63578283fd5b505081359360208301359350604090920135919050565b8060005b60028110156105ea578151845260209384019390910190600101610d7e565b8060005b60088110156105ea578151845260209384019390910190600101610da1565b60068110610dde57634e487b7160e01b600052602160045260246000fd5b9052565b80518252602081015160208301526040810151610e026040840182610dc0565b506060810151610e156060840182610dc0565b505050565b6020808252825182820181905260009190848201906040850190845b81811015610e5c57610e49838551610de2565b9284019260809290920191600101610e36565b50909695505050505050565b6102008101610e778287610d7a565b6040808301866000805b6002808210610e905750610eca565b835185845b83811015610eb3578251825260209283019290910190600101610e95565b505050938501935060209290920191600101610e81565b5050505050610edc60c0830185610d7a565b610eea610100830184610d9d565b95945050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6080810161082f8284610de2565b8481526020810184905260808101610f6a6040830185610dc0565b610eea6060830184610dc0565b6040805190810167ffffffffffffffff81118282101715610fa857634e487b7160e01b600052604160045260246000fd5b60405290565b604051610100810167ffffffffffffffff81118282101715610fa857634e487b7160e01b600052604160045260246000fdfea2646970667358221220172b502ba4f7f8efd49189017b6e1253295476788eb734c774675bd49f943c5664736f6c63430008040033";

export interface TinyWorldLibraryAddresses {
  ["__$262fb0c830dbdf2a376562d26adc520444$__"]: string;
}
