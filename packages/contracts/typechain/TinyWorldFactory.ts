/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorld } from "./TinyWorld";

export class TinyWorldFactory extends ContractFactory {
  constructor(
    linkLibraryAddresses: TinyWorldLibraryAddresses,
    signer?: Signer
  ) {
    super(_abi, TinyWorldFactory.linkBytecode(linkLibraryAddresses), signer);
  }

  static linkBytecode(linkLibraryAddresses: TinyWorldLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$262fb0c830dbdf2a376562d26adc520444\\$__", "g"),
      linkLibraryAddresses["__$262fb0c830dbdf2a376562d26adc520444$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(overrides?: Overrides): Promise<TinyWorld> {
    return super.deploy(overrides || {}) as Promise<TinyWorld>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorld {
    return super.attach(address) as TinyWorld;
  }
  connect(signer: Signer): TinyWorldFactory {
    return super.connect(signer) as TinyWorldFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorld {
    return new Contract(address, _abi, signerOrProvider) as TinyWorld;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "originalTileType",
            type: "uint8",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    name: "TileUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "originalTileType",
            type: "uint8",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "originalTileType",
            type: "uint8",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldScale",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[7]",
        name: "publicSignals",
        type: "uint256[7]",
      },
    ],
    name: "proveTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "tileType",
        type: "uint8",
      },
    ],
    name: "randomTileUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedTiles",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "originalTileType",
        type: "uint8",
      },
      {
        internalType: "enum TileType",
        name: "currentTileType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "worldScale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061105d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610121578063d13e4f281461013c578063dd96353114610145578063ea58cb2314610168578063f276dc891461017d578063f2fde38b1461019d57600080fd5b80631551cbd3146100b95780634400d97e146100ce5780634d92f81c146100ea578063715018a6146100fd5780637d94792a1461010557806380d859111461010e575b600080fd5b6100cc6100c7366004610c3a565b6101b0565b005b6100d760665481565b6040519081526020015b60405180910390f35b6100cc6100f8366004610d7d565b6104f9565b6100cc610599565b6100d760655481565b6100cc61011c366004610db8565b6105ff565b6033546040516001600160a01b0390911681526020016100e1565b6100d760695481565b610158610153366004610d44565b610685565b6040516100e19493929190610f8e565b6101706106c4565b6040516100e19190610e60565b61019061018b366004610d5c565b6107e1565b6040516100e19190610f80565b6100cc6101ab366004610c13565b6108ca565b60405163ee9aee5760e01b815273__$262fb0c830dbdf2a376562d26adc520444$__9063ee9aee57906101ed908790879087908790600401610eae565b60206040518083038186803b15801561020557600080fd5b505af4158015610219573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023d9190610d24565b6102805760405162461bcd60e51b815260206004820152600f60248201526e4661696c6564205a4b20636865636b60881b60448201526064015b60405180910390fd5b8051602082015160408301516060840151608085015160a086015160c087015160665484106102ae57600080fd5b60665483106102bc57600080fd5b60695481146102ca57600080fd5b60655482146102d857600080fd5b60006102e5888888610995565b90506000604051806080016040528087815260200186815260200183600581111561032057634e487b7160e01b600052602160045260246000fd5b815260200183600581111561034557634e487b7160e01b600052602160045260246000fd5b90526000878152606760209081526040808320898452825291829020835181559083015160018083019190915591830151600282018054949550859492939192909160ff19909116908360058111156103ae57634e487b7160e01b600052602160045260246000fd5b0217905550606082015160028201805461ff0019166101008360058111156103e657634e487b7160e01b600052602160045260246000fd5b021790555050606880546001808201835560009290925283517fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c22097753600390920291820190815560208501517fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c2209775483015560408501517fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c2209775590920180548695509193909160ff1916908360058111156104ab57634e487b7160e01b600052602160045260246000fd5b0217905550606082015160028201805461ff0019166101008360058111156104e357634e487b7160e01b600052602160045260246000fd5b0217905550505050505050505050505050505050565b6000604051806080016040528085815260200184815260200183600581111561053257634e487b7160e01b600052602160045260246000fd5b815260200183600581111561055757634e487b7160e01b600052602160045260246000fd5b81525090507f829416ba3e7d0add584fd3a7490c0094a63a6b8408c3f05076f5eed55472592a8160405161058b9190610f80565b60405180910390a150505050565b6033546001600160a01b031633146105f35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610277565b6105fd60006109e1565b565b600054610100900460ff1680610618575060005460ff16155b6106345760405162461bcd60e51b815260040161027790610f32565b600054610100900460ff16158015610656576000805461ffff19166101011790555b61065e610a33565b606584905560668390556069829055801561067f576000805461ff00191690555b50505050565b6068818154811061069557600080fd5b600091825260209091206003909102018054600182015460029092015490925060ff8082169161010090041684565b60606068805480602002602001604051908101604052809291908181526020016000905b828210156107d8578382906000526020600020906003020160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16600581111561075157634e487b7160e01b600052602160045260246000fd5b600581111561077057634e487b7160e01b600052602160045260246000fd5b81526020016002820160019054906101000a900460ff1660058111156107a657634e487b7160e01b600052602160045260246000fd5b60058111156107c557634e487b7160e01b600052602160045260246000fd5b81525050815260200190600101906106e8565b50505050905090565b6107e9610b78565b60008381526067602090815260408083208584528252918290208251608081018452815481526001820154928101929092526002810154919290919083019060ff16600581111561084a57634e487b7160e01b600052602160045260246000fd5b600581111561086957634e487b7160e01b600052602160045260246000fd5b81526020016002820160019054906101000a900460ff16600581111561089f57634e487b7160e01b600052602160045260246000fd5b60058111156108be57634e487b7160e01b600052602160045260246000fd5b90525090505b92915050565b6033546001600160a01b031633146109245760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610277565b6001600160a01b0381166109895760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610277565b610992816109e1565b50565b60006012841180156109a75750600182105b156109b4575060036109da565b600f8411156109c5575060056109da565b600d8411156109d6575060026109da565b5060015b9392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610a4c575060005460ff16155b610a685760405162461bcd60e51b815260040161027790610f32565b600054610100900460ff16158015610a8a576000805461ffff19166101011790555b610a92610aae565b610a9a610b18565b8015610992576000805461ff001916905550565b600054610100900460ff1680610ac7575060005460ff16155b610ae35760405162461bcd60e51b815260040161027790610f32565b600054610100900460ff16158015610a9a576000805461ffff19166101011790558015610992576000805461ff001916905550565b600054610100900460ff1680610b31575060005460ff16155b610b4d5760405162461bcd60e51b815260040161027790610f32565b600054610100900460ff16158015610b6f576000805461ffff19166101011790555b610a9a336109e1565b6040518060800160405280600081526020016000815260200160006005811115610bb257634e487b7160e01b600052602160045260246000fd5b81526020016000905290565b600082601f830112610bce578081fd5b610bd6610fbf565b808385604086011115610be7578384fd5b835b6002811015610c08578135845260209384019390910190600101610be9565b509095945050505050565b600060208284031215610c24578081fd5b81356001600160a01b03811681146109da578182fd5b6000806000806101e0808688031215610c51578384fd5b610c5b8787610bbe565b9450604087605f880112610c6d578485fd5b610c75610fbf565b8082890160c08a018b811115610c89578889fd5b885b6002811015610cb257610c9e8d84610bbe565b855260209094019391850191600101610c8b565b50829850610cc08c82610bbe565b975050505050508661011f870112610cd6578182fd5b610cde610ff6565b80610100880189848a011115610cf2578485fd5b8493505b6007841015610d1657803583526001939093019260209283019201610cf6565b509598949750929550505050565b600060208284031215610d35578081fd5b815180151581146109da578182fd5b600060208284031215610d55578081fd5b5035919050565b60008060408385031215610d6e578182fd5b50508035926020909101359150565b600080600060608486031215610d91578283fd5b8335925060208401359150604084013560068110610dad578182fd5b809150509250925092565b600080600060608486031215610dcc578283fd5b505081359360208301359350604090920135919050565b8060005b600281101561067f578151845260209384019390910190600101610de7565b60068110610e2457634e487b7160e01b600052602160045260246000fd5b9052565b80518252602081015160208301526040810151610e486040840182610e06565b506060810151610e5b6060840182610e06565b505050565b6020808252825182820181905260009190848201906040850190845b81811015610ea257610e8f838551610e28565b9284019260809290920191600101610e7c565b50909695505050505050565b6101e08101610ebd8287610de3565b60408083018660005b6002811015610eed57610eda838351610de3565b9183019160209190910190600101610ec6565b50505050610efe60c0830185610de3565b61010082018360005b6007811015610f26578151835260209283019290910190600101610f07565b50505095945050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b608081016108c48284610e28565b8481526020810184905260808101610fa96040830185610e06565b610fb66060830184610e06565b95945050505050565b6040805190810167ffffffffffffffff81118282101715610ff057634e487b7160e01b600052604160045260246000fd5b60405290565b60405160e0810167ffffffffffffffff81118282101715610ff057634e487b7160e01b600052604160045260246000fdfea2646970667358221220507c9fd328bbed64976b0103fa15629ae84ae7c56f23c067d7900c59edcc578664736f6c63430008040033";

export interface TinyWorldLibraryAddresses {
  ["__$262fb0c830dbdf2a376562d26adc520444$__"]: string;
}
