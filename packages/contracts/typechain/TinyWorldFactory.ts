/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorld } from "./TinyWorld";

export class TinyWorldFactory extends ContractFactory {
  constructor(
    linkLibraryAddresses: TinyWorldLibraryAddresses,
    signer?: Signer
  ) {
    super(_abi, TinyWorldFactory.linkBytecode(linkLibraryAddresses), signer);
  }

  static linkBytecode(linkLibraryAddresses: TinyWorldLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$262fb0c830dbdf2a376562d26adc520444\\$__", "g"),
      linkLibraryAddresses["__$262fb0c830dbdf2a376562d26adc520444$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(overrides?: Overrides): Promise<TinyWorld> {
    return super.deploy(overrides || {}) as Promise<TinyWorld>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorld {
    return super.attach(address) as TinyWorld;
  }
  connect(signer: Signer): TinyWorldFactory {
    return super.connect(signer) as TinyWorldFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorld {
    return new Contract(address, _abi, signerOrProvider) as TinyWorld;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    name: "TileUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "buildFarm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cachedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "raritySeed",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "currentTileType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "cutTree",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TileType",
        name: "from",
        type: "uint8",
      },
      {
        internalType: "enum TileType",
        name: "to",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    name: "editTransition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldScale",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[7]",
        name: "publicSignals",
        type: "uint256[7]",
      },
    ],
    name: "proveTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "raritySeed",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "currentTileType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "enum TileType",
        name: "toTileType",
        type: "uint8",
      },
    ],
    name: "transitionTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TileType",
        name: "",
        type: "uint8",
      },
      {
        internalType: "enum TileType",
        name: "",
        type: "uint8",
      },
    ],
    name: "transitions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wheatScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "woodScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldScale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611743806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80639c2a1029116100ad578063e67b629011610071578063e67b629014610278578063e79c5dab1461028b578063ea58cb23146102ab578063f2fde38b146102c0578063fc9cbb36146102d357600080fd5b80639c2a1029146101dc578063bf44026d1461021a578063d13e4f281461023a578063dd96353114610243578063e673da371461026557600080fd5b8063715018a6116100f4578063715018a61461018a5780637270265f146101925780637d94792a146101a557806380d85911146101ae5780638da5cb5b146101c157600080fd5b80631551cbd314610126578063214300d61461013b5780634400d97e1461016e5780634ba147ee14610177575b600080fd5b61013961013436600461117a565b610327565b005b61015b610149366004611153565b606b6020526000908152604090205481565b6040519081526020015b60405180910390f35b61015b60665481565b6101396101853660046112b2565b61067f565b610139610760565b6101396101a03660046112f8565b610796565b61015b60655481565b6101396101bc366004611376565b6107a4565b6033546040516001600160a01b039091168152602001610165565b61020a6101ea366004611280565b606860209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610165565b61022d6102283660046112f8565b6108ae565b604051610165919061161f565b61015b606a5481565b61025661025136600461133d565b610985565b604051610165939291906115f2565b6101396102733660046112f8565b6109d4565b610139610286366004611313565b6109db565b61015b610299366004611153565b606c6020526000908152604090205481565b6102b3610bec565b604051610165919061144a565b6101396102ce366004611153565b610cf0565b6102566102e1366004611355565b6067602090815260009283526040808420825291835291819020815180830190925280548252600181015492820192909252600482015460059092015490919060ff1683565b60405163ee9aee5760e01b815273__$262fb0c830dbdf2a376562d26adc520444$";

export interface TinyWorldLibraryAddresses {
  ["__$262fb0c830dbdf2a376562d26adc520444$__"]: string;
}
