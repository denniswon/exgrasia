/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorld } from "./TinyWorld";

export class TinyWorldFactory extends ContractFactory {
  constructor(
    linkLibraryAddresses: TinyWorldLibraryAddresses,
    signer?: Signer
  ) {
    super(_abi, TinyWorldFactory.linkBytecode(linkLibraryAddresses), signer);
  }

  static linkBytecode(linkLibraryAddresses: TinyWorldLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$262fb0c830dbdf2a376562d26adc520444\\$__", "g"),
      linkLibraryAddresses["__$262fb0c830dbdf2a376562d26adc520444$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(overrides?: Overrides): Promise<TinyWorld> {
    return super.deploy(overrides || {}) as Promise<TinyWorld>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorld {
    return super.attach(address) as TinyWorld;
  }
  connect(signer: Signer): TinyWorldFactory {
    return super.connect(signer) as TinyWorldFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorld {
    return new Contract(address, _abi, signerOrProvider) as TinyWorld;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    name: "TileUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "buildFarm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cachedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "raritySeed",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "currentTileType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "cutTree",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TileType",
        name: "from",
        type: "uint8",
      },
      {
        internalType: "enum TileType",
        name: "to",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    name: "editTransition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldScale",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[7]",
        name: "publicSignals",
        type: "uint256[7]",
      },
    ],
    name: "proveTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedTiles",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "enum TileType",
        name: "toTileType",
        type: "uint8",
      },
    ],
    name: "transitionTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TileType",
        name: "",
        type: "uint8",
      },
      {
        internalType: "enum TileType",
        name: "",
        type: "uint8",
      },
    ],
    name: "transitions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wheatScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "woodScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldScale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061162f806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80639c2a1029116100ad578063e67b629011610071578063e67b62901461027e578063e79c5dab14610291578063ea58cb23146102b1578063f2fde38b146102c6578063fc9cbb36146102d957600080fd5b80639c2a1029146101dc578063bf44026d1461021a578063d13e4f281461023a578063dd96353114610243578063e673da371461026b57600080fd5b8063715018a6116100f4578063715018a61461018a5780637270265f146101925780637d94792a146101a557806380d85911146101ae5780638da5cb5b146101c157600080fd5b80631551cbd314610126578063214300d61461013b5780634400d97e1461016e5780634ba147ee14610177575b600080fd5b610139610134366004611077565b61033c565b005b61015b610149366004611050565b606b6020526000908152604090205481565b6040519081526020015b60405180910390f35b61015b60665481565b6101396101853660046111af565b61062e565b61013961070f565b6101396101a03660046111f5565b610745565b61015b60655481565b6101396101bc366004611273565b610753565b6033546040516001600160a01b039091168152602001610165565b61020a6101ea36600461117d565b606860209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610165565b61022d6102283660046111f5565b61085d565b60405161016591906114c1565b61015b606a5481565b61025661025136600461123a565b610934565b60408051928352602083019190915201610165565b6101396102793660046111f5565b610962565b61013961028c366004611210565b610969565b61015b61029f366004611050565b606c6020526000908152604090205481565b6102b9610b7a565b60405161016591906112e3565b6101396102d4366004611050565b610bed565b61032d6102e7366004611252565b6067602090815260009283526040808420825291835291819020815180830190925280548252600181015492820192909252600482015460059092015490919060ff1683565b60405161016593929190611494565b60405163ee9aee5760e01b815273__$262fb0c830dbdf2a376562d26adc520444$__9063ee9aee579061037990879087908790879060040161133a565b60206040518083038186803b15801561039157600080fd5b505af41580156103a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c99190611161565b61040c5760405162461bcd60e51b815260206004820152600f60248201526e4661696c6564205a4b20636865636b60881b60448201526064015b60405180910390fd5b8051602082015160408301516060840151608085015160a086015160c0870151606654841061043a57600080fd5b606654831061044857600080fd5b606a54811461045657600080fd5b606554821461046457600080fd5b6000610471888888610c85565b6040805180820182528781526020808201889052825160c081018452608081018a815260a082018a90528152835180850185528d81528083018d905291810191909152918201899052919250600090606081018460078111156104e457634e487b7160e01b600052602160045260246000fd5b905260008881526067602090815260408083208a8452825290912082518051825582015160018201559082015191925082916105269060028084019190610ecc565b5060408201516004820155606082015160058201805460ff1916600183600781111561056257634e487b7160e01b600052602160045260246000fd5b02179055505060698054600181018255600091825284517f7fb4302e8e91f9110a6554c2c0a24601252c2a42c2220ca988efcfe3999143086002909202918201556020808601517f7fb4302e8e91f9110a6554c2c0a24601252c2a42c2220ca988efcfe399914309909201919091558982526067815260408083208a84529091529081902090517f60987c6bdd72868f4e9d3ad06799309351c0b66076ffbc20cb70bf005ea77caa92506106169190611526565b60405180910390a15050505050505050505050505050565b6033546001600160a01b031633146106585760405162461bcd60e51b81526004016104039061145f565b806068600085600781111561067d57634e487b7160e01b600052602160045260246000fd5b600781111561069c57634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060008460078111156106cc57634e487b7160e01b600052602160045260246000fd5b60078111156106eb57634e487b7160e01b600052602160045260246000fd5b81526020810191909152604001600020805460ff1916911515919091179055505050565b6033546001600160a01b031633146107395760405162461bcd60e51b81526004016104039061145f565b6107436000610cd1565b565b610750816004610969565b50565b600054610100900460ff168061076c575060005460ff16155b6107885760405162461bcd60e51b815260040161040390611411565b600054610100900460ff161580156107aa576000805461ffff19166101011790555b6107b2610d23565b60658490556066839055606a8290557ffe4781f175d08c6d6373faf8e257806a2b3882e73b5fe0c554d2607f15454f548054600160ff19918216811790925560066000527f6e57c6880317692d1e241d4e588624849a414af4c7f958811b533447ec42aec86020527f0ce15ddd9b6c0707ca89b29c987d4713ae55190edf68320b27f43585908d1388805490911690911790558015610857576000805461ff00191690555b50505050565b610865610f0a565b81516000908152606760209081526040808320828601518452825291829020825160c081018452815460808201908152600183015460a083015281528351808501948590529093919284019160028085019182845b8154815260200190600101908083116108ba57505050918352505060048201546020820152600582015460409091019060ff16600781111561090c57634e487b7160e01b600052602160045260246000fd5b600781111561092b57634e487b7160e01b600052602160045260246000fd5b90525092915050565b6069818154811061094457600080fd5b60009182526020909120600290910201805460019091015490915082565b6107508160065b6109a76040518060400160405280601881526020017f436865636b696e67207472616e736974696f6e2074696c650000000000000000815250610d9e565b8151600090815260676020908152604080832082860151845290915281206005015460ff1660078111156109eb57634e487b7160e01b600052602160045260246000fd5b14156109f657600080fd5b8151600090815260676020908152604080832082860151845290915281206005015460ff1690606890826007811115610a3f57634e487b7160e01b600052602160045260246000fd5b6007811115610a5e57634e487b7160e01b600052602160045260246000fd5b81526020019081526020016000206000836007811115610a8e57634e487b7160e01b600052602160045260246000fd5b6007811115610aad57634e487b7160e01b600052602160045260246000fd5b815260208101919091526040016000205460ff161515600114610acf57600080fd5b825160009081526067602090815260408083208287015184529091529020600501805483919060ff19166001836007811115610b1b57634e487b7160e01b600052602160045260246000fd5b0217905550825160009081526067602090815260408083208287015184529091529081902090517f60987c6bdd72868f4e9d3ad06799309351c0b66076ffbc20cb70bf005ea77caa91610b6d91611526565b60405180910390a1505050565b60606069805480602002602001604051908101604052809291908181526020016000905b82821015610be457838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610b9e565b50505050905090565b6033546001600160a01b03163314610c175760405162461bcd60e51b81526004016104039061145f565b6001600160a01b038116610c7c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610403565b61075081610cd1565b6000601284118015610c975750600182105b15610ca457506003610cca565b600f841115610cb557506007610cca565b600d841115610cc657506002610cca565b5060015b9392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610d3c575060005460ff16155b610d585760405162461bcd60e51b815260040161040390611411565b600054610100900460ff16158015610d7a576000805461ffff19166101011790555b610d82610de1565b610d8a610e4b565b8015610750576000805461ff001916905550565b61075081604051602401610db291906113be565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610eab565b600054610100900460ff1680610dfa575060005460ff16155b610e165760405162461bcd60e51b815260040161040390611411565b600054610100900460ff16158015610d8a576000805461ffff19166101011790558015610750576000805461ff001916905550565b600054610100900460ff1680610e64575060005460ff16155b610e805760405162461bcd60e51b815260040161040390611411565b600054610100900460ff16158015610ea2576000805461ffff19166101011790555b610d8a33610cd1565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8260028101928215610efa579160200282015b82811115610efa578251825591602001919060010190610edf565b50610f06929150610f66565b5090565b6040805160c0810190915260006080820181815260a0830191909152815260208101610f34610f7b565b81526020016000815260200160006007811115610f6157634e487b7160e01b600052602160045260246000fd5b905290565b5b80821115610f065760008155600101610f67565b60405180604001604052806002906020820280368337509192915050565b600082601f830112610fa9578081fd5b610fb161158d565b808385604086011115610fc2578384fd5b835b6002811015610fe3578135845260209384019390910190600101610fc4565b509095945050505050565b803560088110610ffd57600080fd5b919050565b600060408284031215611013578081fd5b6040516040810181811067ffffffffffffffff82111715611036576110366115d5565b604052823581526020928301359281019290925250919050565b600060208284031215611061578081fd5b81356001600160a01b0381168114610cca578182fd5b6000806000806101e080868803121561108e578384fd5b6110988787610f99565b9450604087605f8801126110aa578485fd5b6110b261158d565b8082890160c08a018b8111156110c6578889fd5b885b60028110156110ef576110db8d84610f99565b8552602090940193918501916001016110c8565b508298506110fd8c82610f99565b975050505050508661011f870112611113578182fd5b61111b6115b6565b80610100880189848a01111561112f578485fd5b8493505b600784101561115357803583526001939093019260209283019201611133565b509598949750929550505050565b600060208284031215611172578081fd5b8151610cca816115eb565b6000806040838503121561118f578182fd5b61119883610fee565b91506111a660208401610fee565b90509250929050565b6000806000606084860312156111c3578283fd5b6111cc84610fee565b92506111da60208501610fee565b915060408401356111ea816115eb565b809150509250925092565b600060408284031215611206578081fd5b610cca8383611002565b60008060608385031215611222578182fd5b61122c8484611002565b91506111a660408401610fee565b60006020828403121561124b578081fd5b5035919050565b60008060408385031215611264578182fd5b50508035926020909101359150565b600080600060608486031215611287578283fd5b505081359360208301359350604090920135919050565b8060005b60028110156108575781518452602093840193909101906001016112a2565b600881106112df57634e487b7160e01b600052602160045260246000fd5b9052565b602080825282518282018190526000919060409081850190868401855b8281101561132d5761131d84835180518252602090810151910152565b9284019290850190600101611300565b5091979650505050505050565b6101e08101611349828761129e565b60408083018660005b60028110156113795761136683835161129e565b9183019160209190910190600101611352565b5050505061138a60c083018561129e565b61010082018360005b60078110156113b2578151835260209283019290910190600101611393565b50505095945050505050565b6000602080835283518082850152825b818110156113ea578581018301518582016040015282016113ce565b818111156113fb5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8351815260208085015190820152608081018360408301526114b960608301846112c1565b949350505050565b8151805182526020908101519082015260c081016020808401516040840160005b60028110156114ff578251825291830191908301906001016114e2565b5050505060408301516080830152606083015161151f60a08401826112c1565b5092915050565b600060c0820190508254825260018084015460208181860152600291506040850182870160005b8481101561156857815483529183019190850190850161154d565b5050505050506004830154608083015260ff60058401541661151f60a08401826112c1565b6040805190810167ffffffffffffffff811182821017156115b0576115b06115d5565b60405290565b60405160e0810167ffffffffffffffff811182821017156115b0576115b05b634e487b7160e01b600052604160045260246000fd5b801515811461075057600080fdfea2646970667358221220c53f5d9c850ed0e8e103bee99746ec492c1151c714b243f3b80ce5f6c22bdd2964736f6c63430008040033";

export interface TinyWorldLibraryAddresses {
  ["__$262fb0c830dbdf2a376562d26adc520444$__"]: string;
}
