/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorld } from "./TinyWorld";

export class TinyWorldFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TinyWorld> {
    return super.deploy(overrides || {}) as Promise<TinyWorld>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorld {
    return super.attach(address) as TinyWorld;
  }
  connect(signer: Signer): TinyWorldFactory {
    return super.connect(signer) as TinyWorldFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorld {
    return new Contract(address, _abi, signerOrProvider) as TinyWorld;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        internalType: "enum TileType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "publicSignals",
        type: "uint256[4]",
      },
    ],
    name: "proveTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610852806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063cd28e8cb1161005b578063cd28e8cb146100c3578063f276dc89146100d6578063f2fde38b14610111578063fe4b84df1461012457600080fd5b8063715018a6146100825780637d94792a1461008c5780638da5cb5b146100a8575b600080fd5b61008a610137565b005b61009560655481565b6040519081526020015b60405180910390f35b6033546040516001600160a01b03909116815260200161009f565b61008a6100d136600461061b565b6101e0565b6101046100e436600461071d565b600091825260666020908152604080842092845291905290205460ff1690565b60405161009f919061073e565b61008a61011f3660046105ed565b61026f565b61008a610132366004610705565b61038a565b6033546001600160a01b031633146101965760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b805160208201516040830151606084015160655482146101ff57600080fd5b80600281111561021f57634e487b7160e01b600052602160045260246000fd5b60008581526066602090815260408083208784529091529020805460ff1916600183600281111561026057634e487b7160e01b600052602160045260246000fd5b02179055505050505050505050565b6033546001600160a01b031633146102c95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161018d565b6001600160a01b03811661032e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161018d565b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff16806103a3575060005460ff16155b6103bf5760405162461bcd60e51b815260040161018d90610766565b600054610100900460ff161580156103e1576000805461ffff19166101011790555b6103e9610404565b60658290558015610400576000805461ff00191690555b5050565b600054610100900460ff168061041d575060005460ff16155b6104395760405162461bcd60e51b815260040161018d90610766565b600054610100900460ff1615801561045b576000805461ffff19166101011790555b610463610480565b61046b6104ea565b801561047d576000805461ff00191690555b50565b600054610100900460ff1680610499575060005460ff16155b6104b55760405162461bcd60e51b815260040161018d90610766565b600054610100900460ff1615801561046b576000805461ffff1916610101179055801561047d576000805461ff001916905550565b600054610100900460ff1680610503575060005460ff16155b61051f5760405162461bcd60e51b815260040161018d90610766565b600054610100900460ff16158015610541576000805461ffff19166101011790555b603380546001600160a01b0319163390811790915560405181906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350801561047d576000805461ff001916905550565b600082601f8301126105a8578081fd5b6105b06107b4565b8083856040860111156105c1578384fd5b835b60028110156105e25781358452602093840193909101906001016105c3565b509095945050505050565b6000602082840312156105fe578081fd5b81356001600160a01b0381168114610614578182fd5b9392505050565b600080600080610180808688031215610632578384fd5b61063c8787610598565b9450604087605f88011261064e578485fd5b6106566107b4565b8082890160c08a018b81111561066a578889fd5b885b60028110156106935761067f8d84610598565b85526020909401939185019160010161066c565b508298506106a18c82610598565b975050505050508661011f8701126106b7578182fd5b6106bf6107eb565b80610100880189848a0111156106d3578485fd5b8493505b60048410156106f7578035835260019390930192602092830192016106d7565b509598949750929550505050565b600060208284031215610716578081fd5b5035919050565b6000806040838503121561072f578182fd5b50508035926020909101359150565b602081016003831061076057634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6040805190810167ffffffffffffffff811182821017156107e557634e487b7160e01b600052604160045260246000fd5b60405290565b6040516080810167ffffffffffffffff811182821017156107e557634e487b7160e01b600052604160045260246000fdfea2646970667358221220934ca2fe6ef885e0244d0782762b4454c810965b7f8c8ffde96f2a2ea1bc315864736f6c63430008040033";
