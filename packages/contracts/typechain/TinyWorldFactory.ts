/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorld } from "./TinyWorld";

export class TinyWorldFactory extends ContractFactory {
  constructor(
    linkLibraryAddresses: TinyWorldLibraryAddresses,
    signer?: Signer
  ) {
    super(_abi, TinyWorldFactory.linkBytecode(linkLibraryAddresses), signer);
  }

  static linkBytecode(linkLibraryAddresses: TinyWorldLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$262fb0c830dbdf2a376562d26adc520444\\$__", "g"),
      linkLibraryAddresses["__$262fb0c830dbdf2a376562d26adc520444$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(overrides?: Overrides): Promise<TinyWorld> {
    return super.deploy(overrides || {}) as Promise<TinyWorld>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorld {
    return super.attach(address) as TinyWorld;
  }
  connect(signer: Signer): TinyWorldFactory {
    return super.connect(signer) as TinyWorldFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorld {
    return new Contract(address, _abi, signerOrProvider) as TinyWorld;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    name: "TileUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "breadScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "buildFarm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cachedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "raritySeed",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "currentTileType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "collectWood",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TileType",
        name: "from",
        type: "uint8",
      },
      {
        internalType: "enum TileType",
        name: "to",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    name: "editTransition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "harvestWheat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldScale",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lastHarvested",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "makeBread",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "makeWindmill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[7]",
        name: "publicSignals",
        type: "uint256[7]",
      },
    ],
    name: "proveTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedTiles",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "enum TileType",
        name: "toTileType",
        type: "uint8",
      },
    ],
    name: "transitionTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TileType",
        name: "",
        type: "uint8",
      },
      {
        internalType: "enum TileType",
        name: "",
        type: "uint8",
      },
    ],
    name: "transitions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wheatScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "woodScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldScale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611953806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063b38dbe6d116100c3578063e673da371161007c578063e673da3714610326578063e67b629014610339578063e79c5dab1461034c578063ea58cb231461036c578063f2fde38b14610381578063fc9cbb361461039457600080fd5b8063b38dbe6d14610277578063bf44026d146102a2578063c26caf38146102c2578063d13e4f28146102d5578063d4c2e7ac146102de578063dd963531146102fe57600080fd5b8063747418201161011557806374741820146101dc5780637d94792a146101ef57806380d85911146101f85780638d5192691461020b5780638da5cb5b1461021e5780639c2a10291461023957600080fd5b80631551cbd31461015d578063214300d6146101725780634400d97e146101a55780634ba147ee146101ae57806360100f57146101c1578063715018a6146101d4575b600080fd5b61017061016b366004611337565b6103f7565b005b610192610180366004611310565b606b6020526000908152604090205481565b6040519081526020015b60405180910390f35b61019260665481565b6101706101bc36600461146f565b6106e9565b6101706101cf3660046114b5565b6107ca565b610170610884565b6101706101ea3660046114b5565b6108ba565b61019260655481565b610170610206366004611533565b6108e8565b6101706102193660046114b5565b610a44565b6033546040516001600160a01b03909116815260200161019c565b61026761024736600461143d565b606860209081526000928352604080842090915290825290205460ff1681565b604051901515815260200161019c565b610192610285366004611512565b606e60209081526000928352604080842090915290825290205481565b6102b56102b03660046114b5565b610a95565b60405161019c9190611781565b6101706102d03660046114b5565b610b6c565b610192606a5481565b6101926102ec366004611310565b606d6020526000908152604090205481565b61031161030c3660046114fa565b610bf4565b6040805192835260208301919091520161019c565b6101706103343660046114b5565b610c22565b6101706103473660046114d0565b610c29565b61019261035a366004611310565b606c6020526000908152604090205481565b610374610e3a565b60405161019c91906115a3565b61017061038f366004611310565b610ead565b6103e86103a2366004611512565b6067602090815260009283526040808420825291835291819020815180830190925280548252600181015492820192909252600482015460059092015490919060ff1683565b60405161019c93929190611754565b60405163ee9aee5760e01b815273__$262fb0c830dbdf2a376562d26adc520444$__9063ee9aee57906104349087908790879087906004016115fa565b60206040518083038186803b15801561044c57600080fd5b505af4158015610460573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104849190611421565b6104c75760405162461bcd60e51b815260206004820152600f60248201526e4661696c6564205a4b20636865636b60881b60448201526064015b60405180910390fd5b8051602082015160408301516060840151608085015160a086015160c087015160665484106104f557600080fd5b606654831061050357600080fd5b606a54811461051157600080fd5b606554821461051f57600080fd5b600061052c888888610f45565b6040805180820182528781526020808201889052825160c081018452608081018a815260a082018a90528152835180850185528d81528083018d9052918101919091529182018990529192506000906060810184600881111561059f57634e487b7160e01b600052602160045260246000fd5b905260008881526067602090815260408083208a8452825290912082518051825582015160018201559082015191925082916105e1906002808401919061118c565b5060408201516004820155606082015160058201805460ff1916600183600881111561061d57634e487b7160e01b600052602160045260246000fd5b02179055505060698054600181018255600091825284517f7fb4302e8e91f9110a6554c2c0a24601252c2a42c2220ca988efcfe3999143086002909202918201556020808601517f7fb4302e8e91f9110a6554c2c0a24601252c2a42c2220ca988efcfe399914309909201919091558982526067815260408083208a84529091529081902090517f60987c6bdd72868f4e9d3ad06799309351c0b66076ffbc20cb70bf005ea77caa92506106d191906117e6565b60405180910390a15050505050505050505050505050565b6033546001600160a01b031633146107135760405162461bcd60e51b81526004016104be9061171f565b806068600085600881111561073857634e487b7160e01b600052602160045260246000fd5b600881111561075757634e487b7160e01b600052602160045260246000fd5b8152602001908152602001600020600084600881111561078757634e487b7160e01b600052602160045260246000fd5b60088111156107a657634e487b7160e01b600052602160045260246000fd5b81526020810191909152604001600020805460ff1916911515919091179055505050565b336000908152606b6020526040902054600311156107e757600080fd5b60078151600090815260676020908152604080832082860151845290915290206005015460ff16600881111561082d57634e487b7160e01b600052602160045260246000fd5b1461083757600080fd5b336000908152606b602052604081208054600392906108579084906118b1565b9091555050336000908152606d6020526040812080546001929061087c908490611899565b909155505050565b6033546001600160a01b031633146108ae5760405162461bcd60e51b81526004016104be9061171f565b6108b86000610f91565b565b6108c5816004610c29565b336000908152606c602052604081208054916108e0836118c8565b919050555050565b600054610100900460ff1680610901575060005460ff16155b61091d5760405162461bcd60e51b81526004016104be906116d1565b600054610100900460ff1615801561093f576000805461ffff19166101011790555b610947610fe3565b60658490556066839055606a8290557ffe4781f175d08c6d6373faf8e257806a2b3882e73b5fe0c554d2607f15454f548054600160ff1991821681179092557f78e57d820f18e677b89746142553699e1fce1f959c7bc4b7a21f07161239084280548216831790557fa48154dd5d6e3d137133de6afa2e32a49e49ecb516c0335da574194588e9d120805482168317905560086000527f374dc179ab22b15b16e95e8d09508d6170a7451c6357e0b730cf2e3e1d257f986020527f73558278389be84f9d64ff2a8ba48fefe3bcc1fc8bfc7f4d099a60cfc2f95fe8805490911690911790558015610a3e576000805461ff00191690555b50505050565b336000908152606c6020526040902054600a1115610a6157600080fd5b336000908152606c602052604081208054600a9290610a819084906118b1565b90915550610a929050816007610c29565b50565b610a9d6111ca565b81516000908152606760209081526040808320828601518452825291829020825160c081018452815460808201908152600183015460a083015281528351808501948590529093919284019160028085019182845b815481526020019060010190808311610af257505050918352505060048201546020820152600582015460409091019060ff166008811115610b4457634e487b7160e01b600052602160045260246000fd5b6008811115610b6357634e487b7160e01b600052602160045260246000fd5b90525092915050565b80516000908152606e60209081526040808320828501518452909152902054610b9690603c611899565b421015610ba257600080fd5b610bad816008610c29565b336000908152606b60205260408120805460039290610bcd908490611899565b909155505080516000908152606e6020908152604080832093820151835292905220429055565b60698181548110610c0457600080fd5b60009182526020909120600290910201805460019091015490915082565b610a928160065b610c676040518060400160405280601881526020017f436865636b696e67207472616e736974696f6e2074696c65000000000000000081525061105e565b8151600090815260676020908152604080832082860151845290915281206005015460ff166008811115610cab57634e487b7160e01b600052602160045260246000fd5b1415610cb657600080fd5b8151600090815260676020908152604080832082860151845290915281206005015460ff1690606890826008811115610cff57634e487b7160e01b600052602160045260246000fd5b6008811115610d1e57634e487b7160e01b600052602160045260246000fd5b81526020019081526020016000206000836008811115610d4e57634e487b7160e01b600052602160045260246000fd5b6008811115610d6d57634e487b7160e01b600052602160045260246000fd5b815260208101919091526040016000205460ff161515600114610d8f57600080fd5b825160009081526067602090815260408083208287015184529091529020600501805483919060ff19166001836008811115610ddb57634e487b7160e01b600052602160045260246000fd5b0217905550825160009081526067602090815260408083208287015184529091529081902090517f60987c6bdd72868f4e9d3ad06799309351c0b66076ffbc20cb70bf005ea77caa91610e2d916117e6565b60405180910390a1505050565b60606069805480602002602001604051908101604052809291908181526020016000905b82821015610ea457838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610e5e565b50505050905090565b6033546001600160a01b03163314610ed75760405162461bcd60e51b81526004016104be9061171f565b6001600160a01b038116610f3c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104be565b610a9281610f91565b6000601284118015610f575750600382105b15610f6457506003610f8a565b600f841115610f7557506008610f8a565b600d841115610f8657506002610f8a565b5060015b9392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610ffc575060005460ff16155b6110185760405162461bcd60e51b81526004016104be906116d1565b600054610100900460ff1615801561103a576000805461ffff19166101011790555b6110426110a1565b61104a61110b565b8015610a92576000805461ff001916905550565b610a9281604051602401611072919061167e565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261116b565b600054610100900460ff16806110ba575060005460ff16155b6110d65760405162461bcd60e51b81526004016104be906116d1565b600054610100900460ff1615801561104a576000805461ffff19166101011790558015610a92576000805461ff001916905550565b600054610100900460ff1680611124575060005460ff16155b6111405760405162461bcd60e51b81526004016104be906116d1565b600054610100900460ff16158015611162576000805461ffff19166101011790555b61104a33610f91565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82600281019282156111ba579160200282015b828111156111ba57825182559160200191906001019061119f565b506111c6929150611226565b5090565b6040805160c0810190915260006080820181815260a08301919091528152602081016111f461123b565b8152602001600081526020016000600881111561122157634e487b7160e01b600052602160045260246000fd5b905290565b5b808211156111c65760008155600101611227565b60405180604001604052806002906020820280368337509192915050565b600082601f830112611269578081fd5b61127161184d565b808385604086011115611282578384fd5b835b60028110156112a3578135845260209384019390910190600101611284565b509095945050505050565b8035600981106112bd57600080fd5b919050565b6000604082840312156112d3578081fd5b6040516040810181811067ffffffffffffffff821117156112f6576112f66118f9565b604052823581526020928301359281019290925250919050565b600060208284031215611321578081fd5b81356001600160a01b0381168114610f8a578182fd5b6000806000806101e080868803121561134e578384fd5b6113588787611259565b9450604087605f88011261136a578485fd5b61137261184d565b8082890160c08a018b811115611386578889fd5b885b60028110156113af5761139b8d84611259565b855260209094019391850191600101611388565b508298506113bd8c82611259565b975050505050508661011f8701126113d3578182fd5b6113db611876565b80610100880189848a0111156113ef578485fd5b8493505b6007841015611413578035835260019390930192602092830192016113f3565b509598949750929550505050565b600060208284031215611432578081fd5b8151610f8a8161190f565b6000806040838503121561144f578182fd5b611458836112ae565b9150611466602084016112ae565b90509250929050565b600080600060608486031215611483578283fd5b61148c846112ae565b925061149a602085016112ae565b915060408401356114aa8161190f565b809150509250925092565b6000604082840312156114c6578081fd5b610f8a83836112c2565b600080606083850312156114e2578182fd5b6114ec84846112c2565b9150611466604084016112ae565b60006020828403121561150b578081fd5b5035919050565b60008060408385031215611524578182fd5b50508035926020909101359150565b600080600060608486031215611547578283fd5b505081359360208301359350604090920135919050565b8060005b6002811015610a3e578151845260209384019390910190600101611562565b6009811061159f57634e487b7160e01b600052602160045260246000fd5b9052565b602080825282518282018190526000919060409081850190868401855b828110156115ed576115dd84835180518252602090810151910152565b92840192908501906001016115c0565b5091979650505050505050565b6101e08101611609828761155e565b60408083018660005b60028110156116395761162683835161155e565b9183019160209190910190600101611612565b5050505061164a60c083018561155e565b61010082018360005b6007811015611672578151835260209283019290910190600101611653565b50505095945050505050565b6000602080835283518082850152825b818110156116aa5785810183015185820160400152820161168e565b818111156116bb5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8351815260208085015190820152608081018360408301526117796060830184611581565b949350505050565b8151805182526020908101519082015260c081016020808401516040840160005b60028110156117bf578251825291830191908301906001016117a2565b505050506040830151608083015260608301516117df60a0840182611581565b5092915050565b600060c0820190508254825260018084015460208181860152600291506040850182870160005b8481101561182857815483529183019190850190850161180d565b5050505050506004830154608083015260ff6005840154166117df60a0840182611581565b6040805190810167ffffffffffffffff81118282101715611870576118706118f9565b60405290565b60405160e0810167ffffffffffffffff81118282101715611870576118706118f9565b600082198211156118ac576118ac6118e3565b500190565b6000828210156118c3576118c36118e3565b500390565b60006000198214156118dc576118dc6118e3565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8015158114610a9257600080fdfea2646970667358221220d80e93851105e5d26a08ad5520384f63e49fc26cbc5f57feab275d1829211c6d64736f6c63430008040033";

export interface TinyWorldLibraryAddresses {
  ["__$262fb0c830dbdf2a376562d26adc520444$__"]: string;
}
