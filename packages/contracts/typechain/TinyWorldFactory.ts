/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorld } from "./TinyWorld";

export class TinyWorldFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TinyWorld> {
    return super.deploy(overrides || {}) as Promise<TinyWorld>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorld {
    return super.attach(address) as TinyWorld;
  }
  connect(signer: Signer): TinyWorldFactory {
    return super.connect(signer) as TinyWorldFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorld {
    return new Contract(address, _abi, signerOrProvider) as TinyWorld;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum TileType",
        name: "tileType",
        type: "uint8",
      },
    ],
    name: "TileProved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        internalType: "enum TileType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldScale",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "publicSignals",
        type: "uint256[4]",
      },
    ],
    name: "proveTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "worldScale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061082a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146100da578063cd28e8cb146100f5578063d13e4f2814610108578063f276dc8914610111578063f2fde38b1461014c57600080fd5b80634400d97e14610098578063715018a6146100b45780637d94792a146100be57806380d85911146100c7575b600080fd5b6100a160665481565b6040519081526020015b60405180910390f35b6100bc61015f565b005b6100a160655481565b6100bc6100d53660046106eb565b6101ca565b6033546040516001600160a01b0390911681526020016100ab565b6100bc6101033660046105e0565b610250565b6100a160675481565b61013f61011f3660046106ca565b600091825260686020908152604080842092845291905290205460ff1690565b6040516100ab9190610716565b6100bc61015a3660046105b2565b6102fb565b6033546001600160a01b031633146101be5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101c860006103c6565b565b600054610100900460ff16806101e3575060005460ff16155b6101ff5760405162461bcd60e51b81526004016101b59061073e565b600054610100900460ff16158015610221576000805461ffff19166101011790555b610229610418565b606584905560668390556067829055801561024a576000805461ff00191690555b50505050565b8051602082015160408301516060840151606654841061026f57600080fd5b606654831061027d57600080fd5b606554821461028b57600080fd5b8060058111156102ab57634e487b7160e01b600052602160045260246000fd5b60008581526068602090815260408083208784529091529020805460ff191660018360058111156102ec57634e487b7160e01b600052602160045260246000fd5b02179055505050505050505050565b6033546001600160a01b031633146103555760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101b5565b6001600160a01b0381166103ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101b5565b6103c3816103c6565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610431575060005460ff16155b61044d5760405162461bcd60e51b81526004016101b59061073e565b600054610100900460ff1615801561046f576000805461ffff19166101011790555b610477610493565b61047f6104fd565b80156103c3576000805461ff001916905550565b600054610100900460ff16806104ac575060005460ff16155b6104c85760405162461bcd60e51b81526004016101b59061073e565b600054610100900460ff1615801561047f576000805461ffff191661010117905580156103c3576000805461ff001916905550565b600054610100900460ff1680610516575060005460ff16155b6105325760405162461bcd60e51b81526004016101b59061073e565b600054610100900460ff16158015610554576000805461ffff19166101011790555b61047f336103c6565b600082601f83011261056d578081fd5b61057561078c565b808385604086011115610586578384fd5b835b60028110156105a7578135845260209384019390910190600101610588565b509095945050505050565b6000602082840312156105c3578081fd5b81356001600160a01b03811681146105d9578182fd5b9392505050565b6000806000806101808086880312156105f7578384fd5b610601878761055d565b9450604087605f880112610613578485fd5b61061b61078c565b8082890160c08a018b81111561062f578889fd5b885b6002811015610658576106448d8461055d565b855260209094019391850191600101610631565b508298506106668c8261055d565b975050505050508661011f87011261067c578182fd5b6106846107c3565b80610100880189848a011115610698578485fd5b8493505b60048410156106bc5780358352600193909301926020928301920161069c565b509598949750929550505050565b600080604083850312156106dc578182fd5b50508035926020909101359150565b6000806000606084860312156106ff578283fd5b505081359360208301359350604090920135919050565b602081016006831061073857634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6040805190810167ffffffffffffffff811182821017156107bd57634e487b7160e01b600052604160045260246000fd5b60405290565b6040516080810167ffffffffffffffff811182821017156107bd57634e487b7160e01b600052604160045260246000fdfea2646970667358221220aac45e6dc0f8b1aac3f5c8af4e2ba8e97768d67058c1284ce9f8659c63f0d2c164736f6c63430008040033";
