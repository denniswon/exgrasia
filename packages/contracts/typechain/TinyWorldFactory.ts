/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorld } from "./TinyWorld";

export class TinyWorldFactory extends ContractFactory {
  constructor(
    linkLibraryAddresses: TinyWorldLibraryAddresses,
    signer?: Signer
  ) {
    super(_abi, TinyWorldFactory.linkBytecode(linkLibraryAddresses), signer);
  }

  static linkBytecode(linkLibraryAddresses: TinyWorldLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$262fb0c830dbdf2a376562d26adc520444\\$__", "g"),
      linkLibraryAddresses["__$262fb0c830dbdf2a376562d26adc520444$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(overrides?: Overrides): Promise<TinyWorld> {
    return super.deploy(overrides || {}) as Promise<TinyWorld>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorld {
    return super.attach(address) as TinyWorld;
  }
  connect(signer: Signer): TinyWorldFactory {
    return super.connect(signer) as TinyWorldFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorld {
    return new Contract(address, _abi, signerOrProvider) as TinyWorld;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum TileType",
        name: "tileType",
        type: "uint8",
      },
    ],
    name: "TileUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "originalTileType",
            type: "uint8",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "originalTileType",
            type: "uint8",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldScale",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[6]",
        name: "publicSignals",
        type: "uint256[6]",
      },
    ],
    name: "proveTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedTiles",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "originalTileType",
        type: "uint8",
      },
      {
        internalType: "enum TileType",
        name: "currentTileType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "worldScale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f82806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610103578063d13e4f281461011e578063dd96353114610127578063ea58cb231461014a578063f276dc891461015f578063f2fde38b1461017f57600080fd5b80630eaeab59146100ae5780634400d97e146100c3578063715018a6146100df5780637d94792a146100e757806380d85911146100f0575b600080fd5b6100c16100bc366004610b79565b610192565b005b6100cc60665481565b6040519081526020015b60405180910390f35b6100c16104d4565b6100cc60655481565b6100c16100fe366004610cbc565b61053a565b6033546040516001600160a01b0390911681526020016100d6565b6100cc60695481565b61013a610135366004610c83565b6105c0565b6040516100d69493929190610ebc565b6101526105ff565b6040516100d69190610d87565b61017261016d366004610c9b565b61071c565b6040516100d69190610eae565b6100c161018d366004610b4b565b610805565b60405163b0c4cd6d60e01b815273__$262fb0c830dbdf2a376562d26adc520444$__9063b0c4cd6d906101cf908790879087908790600401610dd5565b60206040518083038186803b1580156101e757600080fd5b505af41580156101fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021f9190610c63565b6102625760405162461bcd60e51b815260206004820152600f60248201526e4661696c6564205a4b20636865636b60881b60448201526064015b60405180910390fd5b8051602082015160408301516060840151608085015160a0860151606654841061028b57600080fd5b606654831061029957600080fd5b60695481146102a757600080fd5b60655482146102b557600080fd5b60006102c187876108d0565b9050600060405180608001604052808781526020018681526020018360058111156102fc57634e487b7160e01b600052602160045260246000fd5b815260200183600581111561032157634e487b7160e01b600052602160045260246000fd5b90526000878152606760209081526040808320898452825291829020835181559083015160018083019190915591830151600282018054949550859492939192909160ff199091169083600581111561038a57634e487b7160e01b600052602160045260246000fd5b0217905550606082015160028201805461ff0019166101008360058111156103c257634e487b7160e01b600052602160045260246000fd5b021790555050606880546001808201835560009290925283517fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c22097753600390920291820190815560208501517fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c2209775483015560408501517fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c2209775590920180548695509193909160ff19169083600581111561048757634e487b7160e01b600052602160045260246000fd5b0217905550606082015160028201805461ff0019166101008360058111156104bf57634e487b7160e01b600052602160045260246000fd5b02179055505050505050505050505050505050565b6033546001600160a01b0316331461052e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610259565b6105386000610919565b565b600054610100900460ff1680610553575060005460ff16155b61056f5760405162461bcd60e51b815260040161025990610e60565b600054610100900460ff16158015610591576000805461ffff19166101011790555b61059961096b565b60658490556066839055606982905580156105ba576000805461ff00191690555b50505050565b606881815481106105d057600080fd5b600091825260209091206003909102018054600182015460029092015490925060ff8082169161010090041684565b60606068805480602002602001604051908101604052809291908181526020016000905b82821015610713578382906000526020600020906003020160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16600581111561068c57634e487b7160e01b600052602160045260246000fd5b60058111156106ab57634e487b7160e01b600052602160045260246000fd5b81526020016002820160019054906101000a900460ff1660058111156106e157634e487b7160e01b600052602160045260246000fd5b600581111561070057634e487b7160e01b600052602160045260246000fd5b8152505081526020019060010190610623565b50505050905090565b610724610ab0565b60008381526067602090815260408083208584528252918290208251608081018452815481526001820154928101929092526002810154919290919083019060ff16600581111561078557634e487b7160e01b600052602160045260246000fd5b60058111156107a457634e487b7160e01b600052602160045260246000fd5b81526020016002820160019054906101000a900460ff1660058111156107da57634e487b7160e01b600052602160045260246000fd5b60058111156107f957634e487b7160e01b600052602160045260246000fd5b90525090505b92915050565b6033546001600160a01b0316331461085f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610259565b6001600160a01b0381166108c45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610259565b6108cd81610919565b50565b60006012831180156108e25750600182105b156108ef575060036107ff565b600f831115610900575060056107ff565b600d831115610911575060026107ff565b5060016107ff565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610984575060005460ff16155b6109a05760405162461bcd60e51b815260040161025990610e60565b600054610100900460ff161580156109c2576000805461ffff19166101011790555b6109ca6109e6565b6109d2610a50565b80156108cd576000805461ff001916905550565b600054610100900460ff16806109ff575060005460ff16155b610a1b5760405162461bcd60e51b815260040161025990610e60565b600054610100900460ff161580156109d2576000805461ffff191661010117905580156108cd576000805461ff001916905550565b600054610100900460ff1680610a69575060005460ff16155b610a855760405162461bcd60e51b815260040161025990610e60565b600054610100900460ff16158015610aa7576000805461ffff19166101011790555b6109d233610919565b6040518060800160405280600081526020016000815260200160006005811115610aea57634e487b7160e01b600052602160045260246000fd5b81526020016000905290565b600082601f830112610b06578081fd5b610b0e610ee4565b808385604086011115610b1f578384fd5b835b6002811015610b40578135845260209384019390910190600101610b21565b509095945050505050565b600060208284031215610b5c578081fd5b81356001600160a01b0381168114610b72578182fd5b9392505050565b6000806000806101c0808688031215610b90578384fd5b610b9a8787610af6565b9450604087605f880112610bac578485fd5b610bb4610ee4565b8082890160c08a018b811115610bc8578889fd5b885b6002811015610bf157610bdd8d84610af6565b855260209094019391850191600101610bca565b50829850610bff8c82610af6565b975050505050508661011f870112610c15578182fd5b610c1d610f1b565b80610100880189848a011115610c31578485fd5b8493505b6006841015610c5557803583526001939093019260209283019201610c35565b509598949750929550505050565b600060208284031215610c74578081fd5b81518015158114610b72578182fd5b600060208284031215610c94578081fd5b5035919050565b60008060408385031215610cad578182fd5b50508035926020909101359150565b600080600060608486031215610cd0578283fd5b505081359360208301359350604090920135919050565b8060005b60028110156105ba578151845260209384019390910190600101610ceb565b8060005b60068110156105ba578151845260209384019390910190600101610d0e565b60068110610d4b57634e487b7160e01b600052602160045260246000fd5b9052565b80518252602081015160208301526040810151610d6f6040840182610d2d565b506060810151610d826060840182610d2d565b505050565b6020808252825182820181905260009190848201906040850190845b81811015610dc957610db6838551610d4f565b9284019260809290920191600101610da3565b50909695505050505050565b6101c08101610de48287610ce7565b6040808301866000805b6002808210610dfd5750610e37565b835185845b83811015610e20578251825260209283019290910190600101610e02565b505050938501935060209290920191600101610dee565b5050505050610e4960c0830185610ce7565b610e57610100830184610d0a565b95945050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b608081016107ff8284610d4f565b8481526020810184905260808101610ed76040830185610d2d565b610e576060830184610d2d565b6040805190810167ffffffffffffffff81118282101715610f1557634e487b7160e01b600052604160045260246000fd5b60405290565b60405160c0810167ffffffffffffffff81118282101715610f1557634e487b7160e01b600052604160045260246000fdfea264697066735822122025c3993ea0b14e0b2afd51ecdfd3ecf08ae0176f1658f713747c72eb8ac0722964736f6c63430008040033";

export interface TinyWorldLibraryAddresses {
  ["__$262fb0c830dbdf2a376562d26adc520444$__"]: string;
}
