/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorld } from "./TinyWorld";

export class TinyWorldFactory extends ContractFactory {
  constructor(
    linkLibraryAddresses: TinyWorldLibraryAddresses,
    signer?: Signer
  ) {
    super(_abi, TinyWorldFactory.linkBytecode(linkLibraryAddresses), signer);
  }

  static linkBytecode(linkLibraryAddresses: TinyWorldLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$25da62efdcc799b068a78b56dfb6cf3909\\$__", "g"),
      linkLibraryAddresses["__$25da62efdcc799b068a78b56dfb6cf3909$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(overrides?: Overrides): Promise<TinyWorld> {
    return super.deploy(overrides || {}) as Promise<TinyWorld>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorld {
    return super.attach(address) as TinyWorld;
  }
  connect(signer: Signer): TinyWorldFactory {
    return super.connect(signer) as TinyWorldFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorld {
    return new Contract(address, _abi, signerOrProvider) as TinyWorld;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Coords",
        name: "",
        type: "tuple",
      },
    ],
    name: "PlayerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "tileType",
            type: "uint8",
          },
          {
            internalType: "enum TemperatureType",
            name: "temperatureType",
            type: "uint8",
          },
          {
            internalType: "enum AltitudeType",
            name: "altitudeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "smartContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastPurchased",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    name: "TileUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "smartContracts",
        type: "address[]",
      },
    ],
    name: "addWhitelistedContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cachedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "raritySeed",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "tileType",
        type: "uint8",
      },
      {
        internalType: "enum TemperatureType",
        name: "temperatureType",
        type: "uint8",
      },
      {
        internalType: "enum AltitudeType",
        name: "altitudeType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "smartContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lastPurchased",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canMoveSnow",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canMoveWater",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canPutAnything",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "a",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "b",
        type: "tuple",
      },
    ],
    name: "dist",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "forceTileUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "tileType",
            type: "uint8",
          },
          {
            internalType: "enum TemperatureType",
            name: "temperatureType",
            type: "uint8",
          },
          {
            internalType: "enum AltitudeType",
            name: "altitudeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "smartContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastPurchased",
            type: "uint256",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "getContractLocations",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayerIds",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayerInfos",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerLocation",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "getTile",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "tileType",
            type: "uint8",
          },
          {
            internalType: "enum TemperatureType",
            name: "temperatureType",
            type: "uint8",
          },
          {
            internalType: "enum AltitudeType",
            name: "altitudeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "smartContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastPurchased",
            type: "uint256",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "tileType",
            type: "uint8",
          },
          {
            internalType: "enum TemperatureType",
            name: "temperatureType",
            type: "uint8",
          },
          {
            internalType: "enum AltitudeType",
            name: "altitudeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "smartContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lastPurchased",
            type: "uint256",
          },
        ],
        internalType: "struct Tile[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "repr",
        type: "string",
      },
    ],
    name: "initPlayerLocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldScale",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_registryAddress",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_admins",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "movePlayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "smartContract",
        type: "address",
      },
    ],
    name: "ownTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "perlinMax",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerEmoji",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "playerIds",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerInited",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerLocation",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract TinyWorldRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "bool",
        name: "canMove",
        type: "bool",
      },
    ],
    name: "setCanMoveSnow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "bool",
        name: "canMove",
        type: "bool",
      },
    ],
    name: "setCanMoveWater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "bool",
        name: "canPut",
        type: "bool",
      },
    ],
    name: "setCanPutAnything",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "master",
        type: "address",
      },
    ],
    name: "setQuestMaster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedCoords",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "validPlayerEmoji",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vecs",
    outputs: [
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vecsDenom",
    outputs: [
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "whitelistedContracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldScale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "$25da62efdcc799b068a78b56dfb6cf3909$__9063229d05889060840160206040518083038186803b158015612c8c57600080fd5b505af4158015612ca0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cc4919061394b565b9050600073__$25da62efdcc799b068a78b56dfb6cf3909$__63229d0588856000015186602001516065546001612cfb9190613ffe565b6067546040516001600160e01b031960e087901b16815263ffffffff94851660048201529284166024840152908316604483015291909116606482015260840160206040518083038186803b158015612d5357600080fd5b505af4158015612d67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d8b919061394b565b90506000612d9885613423565b855190915083908390600290612db090603290614044565b612dba9190614016565b612dc49082613fbd565b905060006028831115612dd957506004612e08565b6025831115612dea57506003612e08565b6020831115612dfb57506002612e08565b601e831115612e08575060015b6000602a831115612e1b57506002612e28565b6016831115612e28575060015b600080826002811115612e4b57634e487b7160e01b600052602160045260246000fd5b1415612f19576004836004811115612e7357634e487b7160e01b600052602160045260246000fd5b1415612e81575060096130c5565b6003836004811115612ea357634e487b7160e01b600052602160045260246000fd5b1415612eb1575060096130c5565b6002836004811115612ed357634e487b7160e01b600052602160045260246000fd5b1415612ee1575060096130c5565b6001836004811115612f0357634e487b7160e01b600052602160045260246000fd5b1415612f11575060096130c5565b5060016130c5565b6001826002811115612f3b57634e487b7160e01b600052602160045260246000fd5b1415613001576004836004811115612f6357634e487b7160e01b600052602160045260246000fd5b1415612f71575060096130c5565b6003836004811115612f9357634e487b7160e01b600052602160045260246000fd5b1415612fa15750600a6130c5565b6002836004811115612fc357634e487b7160e01b600052602160045260246000fd5b1415612fd1575060086130c5565b6001836004811115612ff357634e487b7160e01b600052602160045260246000fd5b1415612f11575060026130c5565b600483600481111561302357634e487b7160e01b600052602160045260246000fd5b14156130315750600a6130c5565b600383600481111561305357634e487b7160e01b600052602160045260246000fd5b1415613061575060026130c5565b600283600481111561308357634e487b7160e01b600052602160045260246000fd5b1415613091575060026130c5565b60018360048111156130b357634e487b7160e01b600052602160045260246000fd5b14156130c1575060026130c5565b5060015b6040518061012001604052808b815260200160405180604001604052808b81526020018a815250815260200187815260200182600b81111561311757634e487b7160e01b600052602160045260246000fd5b815260200183600281111561313c57634e487b7160e01b600052602160045260246000fd5b815260200184600481111561316157634e487b7160e01b600052602160045260246000fd5b8152600060208201819052604082018190526060909101529a9950505050505050505050565b60008082121561319f5761319a8261412e565b611d00565b5090565b60408051808201909152600080825260208201526065546040805133602082015290810191909152426060820152600090600a906080016040516020818303038152906040528051906020012060001c6131fd919061411a565b90506000601e336001600160a01b0316606554602a61321c9190613ffe565b6040805160208101939093528201524260608201526080016040516020818303038152906040528051906020012060001c613257919061411a565b905060405180604001604052806001846066546132749190614083565b61327e9190614083565b81526020019190915292915050565b61090b82826040516024016132a3929190613dbb565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b17905261346e565b61090b82826040516024016132e8929190613d91565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905261346e565b60606001600160a01b0384163b61337c5760405162461bcd60e51b8152602060048201526024808201527f416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e746044820152631c9858dd60e21b606482015260840161077d565b600080856001600160a01b0316856040516133979190613b94565b600060405180830381855afa9150503d80600081146133d2576040519150601f19603f3d011682016040523d82523d6000602084013e6133d7565b606091505b50915091506133e782828661348f565b925050505b9392505050565b600054610100900460ff1661341a5760405162461bcd60e51b815260040161077d90613e5d565b61165933612bb8565b600060088260000151836020015160405160200161344b929190918252602082015260400190565b6040516020818303038152906040528051906020012060001c611d00919061411a565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6060831561349e5750816133ec565b8251156134ae5782518084602001fd5b8160405162461bcd60e51b815260040161077d9190613d7e565b82600281019282156134f6579160200282015b828111156134f65782518255916020019190600101906134db565b5061319f929150613673565b82805461350e906140ca565b90600052602060002090601f01602090048101928261353057600085556134f6565b82601f1061354957805160ff19168380011785556134f6565b828001600101855582156134f657918201828111156134f65782518255916020019190600101906134db565b604080516101608101909152600061012082018181526101408301919091528152602081016135a2613688565b8152602001600081526020016000600b8111156135cf57634e487b7160e01b600052602160045260246000fd5b815260200160008152602001600081526000602082018190526040820181905260609091015290565b828054613604906140ca565b90600052602060002090601f01602090048101928261362657600085556134f6565b82601f1061363757805485556134f6565b828001600101855582156134f657600052602060002091601f016020900482015b828111156134f6578254825591600101919060010190613658565b5b8082111561319f5760008155600101613674565b60405180604001604052806002906020820280368337509192915050565b600082601f8301126136b6578081fd5b813560206001600160401b038211156136d1576136d161418a565b8160051b6136e0828201613f8d565b8381528281019086840183880185018910156136fa578687fd5b8693505b85841015613725578035613711816141a0565b8352600193909301929184019184016136fe565b50979650505050505050565b600060408284031215613742578081fd5b604051604081018181106001600160401b03821117156137645761376461418a565b604052823581526020928301359281019290925250919050565b60006020828403121561378f578081fd5b81356133ec816141a0565b6000602082840312156137ab578081fd5b81516133ec816141a0565b600080604083850312156137c8578081fd5b82356137d3816141a0565b9150602083013580151581146137e7578182fd5b809150509250929050565b600060208284031215613803578081fd5b81356001600160401b03811115613818578182fd5b613824848285016136a6565b949350505050565b6000602080838503121561383e578182fd5b82356001600160401b0380821115613854578384fd5b818501915085601f830112613867578384fd5b8135818111156138795761387961418a565b61388b601f8201601f19168501613f8d565b915080825286848285010111156138a0578485fd5b80848401858401378101909201929092529392505050565b6000604082840312156138c9578081fd5b611cfd8383613731565b600080606083850312156138e5578182fd5b6138ef8484613731565b915060408301356137e7816141a0565b60008060808385031215613911578182fd5b61391b8484613731565b915061392a8460408501613731565b90509250929050565b600060208284031215613944578081fd5b5035919050565b60006020828403121561395c578081fd5b5051919050565b60008060408385031215613975578182fd5b50508035926020909101359150565b600080600080600060a0868803121561399b578081fd5b85359450602086013593506040860135925060608601356139bb816141a0565b915060808601356001600160401b038111156139d5578182fd5b6139e1888289016136a6565b9150509295509295909350565b6000815180845260208085019450808401835b83811015613a1f578151151587529582019590820190600101613a01565b509495945050505050565b6000815180845260208085019450808401835b83811015613a1f57613a5a87835180518252602090810151910152565b6040969096019590820190600101613a3d565b60058110613a7d57613a7d614174565b9052565b60038110613a7d57613a7d614174565b600c8110613a7d57613a7d614174565b60008151808452613ab981602086016020860161409a565b601f01601f19169290920160200192915050565b613ae282825180518252602090810151910152565b6020808201516040840160005b6002811015613b0c57825182529183019190830190600101613aef565b50505050604081015160808301526060810151613b2c60a0840182613a91565b506080810151613b3f60c0840182613a81565b5060a0810151613b5260e0840182613a6d565b5060c0810151610100613b6f818501836001600160a01b03169052565b60e08301516001600160a01b0316610120850152909101516101409092019190915250565b60008251613ba681846020870161409a565b9190910192915050565b7f416464726573733a206c6f772d6c6576656c207374617469632063616c6c2066815267030b4b632b21016960c51b602082015260008251613bf981602885016020870161409a565b9190910160280192915050565b6001600160a01b0383168152606081016133ec602083018480518252602090810151910152565b6020808252825182820181905260009190848201906040850190845b81811015613c6e5783516001600160a01b031683529284019291840191600101613c49565b50909695505050505050565b602081526000611cfd6020830184613a2a565b60a081526000613ca060a0830188613a2a565b6020838203818501528188518084528284019150828160051b850101838b01865b83811015613cef57601f19878403018552613cdd838351613aa1565b94860194925090850190600101613cc1565b50508681036040880152613d03818b6139ee565b9450505050508281036060840152613d1b81866139ee565b90508281036080840152613d2f81856139ee565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015613c6e57613d6a838551613acd565b928401926101609290920191600101613d57565b602081526000611cfd6020830184613aa1565b604081526000613da46040830185613aa1565b905060018060a01b03831660208301529392505050565b604081526000613dce6040830185613aa1565b905082151560208301529392505050565b6020808252600f908201526e58206f7574206f6620626f756e647360881b604082015260600190565b602080825260119082015270141b185e595c881b9bdd081a5b9a5d1959607a1b604082015260600190565b60208082526010908201526f2737ba1038bab2b9ba1036b0b9ba32b960811b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020808252600f908201526e59206f7574206f6620626f756e647360881b604082015260600190565b60208082526010908201526f2637b1b0ba34b7b7103a37b7903330b960811b604082015260600190565b815181526020808301519082015260408101611d00565b885181526020808a0151908201526101208101886040830152613f386060830189613a91565b613f456080830188613a81565b613f5260a0830187613a6d565b6001600160a01b0394851660c08301529290931660e08401526101009092019190915295945050505050565b6101608101611d008284613acd565b604051601f8201601f191681016001600160401b0381118282101715613fb557613fb561418a565b604052919050565b600080821280156001600160ff1b0384900385131615613fdf57613fdf614148565b600160ff1b8390038412811615613ff857613ff8614148565b50500190565b6000821982111561401157614011614148565b500190565b6000826140255761402561415e565b600160ff1b82146000198414161561403f5761403f614148565b500590565b60008083128015600160ff1b85018412161561406257614062614148565b6001600160ff1b038401831381161561407d5761407d614148565b50500390565b60008282101561409557614095614148565b500390565b60005b838110156140b557818101518382015260200161409d565b838111156140c4576000848401525b50505050565b600181811c908216806140de57607f821691505b602082108114156125d857634e487b7160e01b600052602260045260246000fd5b600060001982141561411357614113614148565b5060010190565b6000826141295761412961415e565b500690565b6000600160ff1b82141561414457614144614148565b0390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146126a657600080fdfe74696c654465736372697074696f6e282875696e743235362c75696e7432353629295c93ca9a002a8dd4813713684685853aca5c1d3f7605fbc5b044e25bb1d18f6da2646970667358221220327472b57ccdfb65e1f59cf2f5b7c841210e5607f6ac3388d9d60c951ed94c4b64736f6c63430008040033";

export interface TinyWorldLibraryAddresses {
  ["__$25da62efdcc799b068a78b56dfb6cf3909$__"]: string;
}
