/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorld } from "./TinyWorld";

export class TinyWorldFactory extends ContractFactory {
  constructor(
    linkLibraryAddresses: TinyWorldLibraryAddresses,
    signer?: Signer
  ) {
    super(_abi, TinyWorldFactory.linkBytecode(linkLibraryAddresses), signer);
  }

  static linkBytecode(linkLibraryAddresses: TinyWorldLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$262fb0c830dbdf2a376562d26adc520444\\$__", "g"),
      linkLibraryAddresses["__$262fb0c830dbdf2a376562d26adc520444$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(overrides?: Overrides): Promise<TinyWorld> {
    return super.deploy(overrides || {}) as Promise<TinyWorld>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorld {
    return super.attach(address) as TinyWorld;
  }
  connect(signer: Signer): TinyWorldFactory {
    return super.connect(signer) as TinyWorldFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorld {
    return new Contract(address, _abi, signerOrProvider) as TinyWorld;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Coords",
        name: "",
        type: "tuple",
      },
    ],
    name: "PlayerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    name: "TileUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "breadScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "buildFarm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cachedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "raritySeed",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "currentTileType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "collectWood",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TileType",
        name: "from",
        type: "uint8",
      },
      {
        internalType: "enum TileType",
        name: "to",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    name: "editTransition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "harvestWheat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "initPlayerLocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldWidth",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_worldScale",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lastHarvested",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "makeBread",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "makeWindmill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "movePlayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerInited",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerLocation",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[7]",
        name: "publicSignals",
        type: "uint256[7]",
      },
    ],
    name: "proveTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedTiles",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "enum TileType",
        name: "toTileType",
        type: "uint8",
      },
    ],
    name: "transitionTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TileType",
        name: "",
        type: "uint8",
      },
      {
        internalType: "enum TileType",
        name: "",
        type: "uint8",
      },
    ],
    name: "transitions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wheatScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "woodScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldScale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612377806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063b173fd40116100f9578063dd96353111610097578063e79c5dab11610071578063e79c5dab14610428578063ea58cb2314610448578063f2fde38b1461045d578063fc9cbb361461047057600080fd5b8063dd963531146103ef578063e673da3714610402578063e67b62901461041557600080fd5b8063c26caf38116100d3578063c26caf3814610390578063d13e4f28146103a3578063d14c3728146103ac578063d4c2e7ac146103cf57600080fd5b8063b173fd4014610309578063b38dbe6d14610345578063bf44026d1461037057600080fd5b80637474182011610166578063810a84c411610140578063810a84c41461028a5780638d5192691461029d5780638da5cb5b146102b05780639c2a1029146102cb57600080fd5b8063747418201461025b5780637d94792a1461026e57806380d859111461027757600080fd5b80634400d97e116101a25780634400d97e146102245780634ba147ee1461022d57806360100f5714610240578063715018a61461025357600080fd5b80631551cbd3146101c9578063214300d6146101de57806330cdc04b14610211575b600080fd5b6101dc6101d7366004611c76565b6104d3565b005b6101fe6101ec366004611c48565b606b6020526000908152604090205481565b6040519081526020015b60405180910390f35b6101dc61021f366004611df4565b61086d565b6101fe60665481565b6101dc61023b366004611dae565b61092b565b6101dc61024e366004611df4565b610a0c565b6101dc610bb7565b6101dc610269366004611df4565b610bed565b6101fe60655481565b6101dc610285366004611e72565b610c1b565b6101dc610298366004611df4565b610d77565b6101dc6102ab366004611df4565b610edc565b6033546040516001600160a01b039091168152602001610208565b6102f96102d9366004611d7c565b606860209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610208565b610330610317366004611c48565b606f602052600090815260409020805460019091015482565b60408051928352602083019190915201610208565b6101fe610353366004611e51565b606e60209081526000928352604080842090915290825290205481565b61038361037e366004611df4565b610f62565b60405161020891906120d1565b6101dc61039e366004611df4565b611039565b6101fe606a5481565b6102f96103ba366004611c48565b60706020526000908152604090205460ff1681565b6101fe6103dd366004611c48565b606d6020526000908152604090205481565b6103306103fd366004611e39565b6110fa565b6101dc610410366004611df4565b611128565b6101dc610423366004611e0f565b61112f565b6101fe610436366004611c48565b606c6020526000908152604090205481565b6104506113fa565b6040516102089190611ee2565b6101dc61046b366004611c48565b61146d565b6104c461047e366004611e51565b6067602090815260009283526040808420825291835291819020815180830190925280548252600181015492820192909252600482015460059092015490919060ff1683565b604051610208939291906120ac565b6040805180820182526060830151815260808301516020808301919091523360009081526070909152919091205460ff166105295760405162461bcd60e51b815260040161052090611fbd565b60405180910390fd5b336000908152606f602090815260409182902082518084019093528054835260019081015491830191909152906105609083611505565b111561057e5760405162461bcd60e51b81526004016105209061206b565b60405163ee9aee5760e01b815273__$262fb0c830dbdf2a376562d26adc520444$__9063ee9aee57906105bb908890889088908890600401611f39565b60206040518083038186803b1580156105d357600080fd5b505af41580156105e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060b9190611d60565b6106495760405162461bcd60e51b815260206004820152600f60248201526e4661696c6564205a4b20636865636b60881b6044820152606401610520565b8151602083015160408401516060850151608086015160a087015160c0880151606654841061067757600080fd5b606654831061068557600080fd5b606a54811461069357600080fd5b60655482146106a157600080fd5b604080518082019091528481526020810184905260006106c3828a8a8a611547565b6040805160c0810182526080810189815260a082018990528152815180830183528c815260208181018d90528201529081018990529091506000906060810183600b81111561072257634e487b7160e01b600052602160045260246000fd5b905260008881526067602090815260408083208a8452825290912082518051825582015160018201559082015191925082916107649060028084019190611ac8565b5060408201516004820155606082015160058201805460ff1916600183600b8111156107a057634e487b7160e01b600052602160045260246000fd5b02179055505060698054600181018255600091825285517f7fb4302e8e91f9110a6554c2c0a24601252c2a42c2220ca988efcfe3999143086002909202918201556020808701517f7fb4302e8e91f9110a6554c2c0a24601252c2a42c2220ca988efcfe399914309909201919091558982526067815260408083208a84529091529081902090517f60987c6bdd72868f4e9d3ad06799309351c0b66076ffbc20cb70bf005ea77caa92506108549190612136565b60405180910390a1505050505050505050505050505050565b3360009081526070602052604090205460ff16156108be5760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e481a5b9a5d195960921b6044820152606401610520565b336000908152606f602090815260408083208451815582850151600191820155607090925291829020805460ff19169091179055517f0fdaaa2b8b07a92479b35adb0552d262bd5e4f7bc415e99df1779b1612f8686290610920908390612095565b60405180910390a150565b6033546001600160a01b031633146109555760405162461bcd60e51b815260040161052090612036565b806068600085600b81111561097a57634e487b7160e01b600052602160045260246000fd5b600b81111561099957634e487b7160e01b600052602160045260246000fd5b8152602001908152602001600020600084600b8111156109c957634e487b7160e01b600052602160045260246000fd5b600b8111156109e857634e487b7160e01b600052602160045260246000fd5b81526020810191909152604001600020805460ff1916911515919091179055505050565b33600090815260706020526040902054819060ff16610a3d5760405162461bcd60e51b815260040161052090611fbd565b336000908152606f60209081526040918290208251808401909352805483526001908101549183019190915290610a749083611505565b1115610a925760405162461bcd60e51b81526004016105209061206b565b336000908152606b602052604090205460031115610ae55760405162461bcd60e51b815260206004820152601060248201526f139bdd08195b9bdd59da081dda19585d60821b6044820152606401610520565b60078251600090815260676020908152604080832082870151845290915290206005015460ff16600b811115610b2b57634e487b7160e01b600052602160045260246000fd5b14610b695760405162461bcd60e51b815260206004820152600e60248201526d139bdd08184815da5b991b5a5b1b60921b6044820152606401610520565b336000908152606b60205260408120805460039290610b899084906122bb565b9091555050336000908152606d60205260408120805460019290610bae90849061222a565b90915550505050565b6033546001600160a01b03163314610be15760405162461bcd60e51b815260040161052090612036565b610beb6000611915565b565b610bf881600461112f565b336000908152606c60205260408120805491610c13836122d2565b919050555050565b600054610100900460ff1680610c34575060005460ff16155b610c505760405162461bcd60e51b815260040161052090611fe8565b600054610100900460ff16158015610c72576000805461ffff19166101011790555b610c7a611967565b60658490556066839055606a8290557ffe4781f175d08c6d6373faf8e257806a2b3882e73b5fe0c554d2607f15454f548054600160ff1991821681179092557f78e57d820f18e677b89746142553699e1fce1f959c7bc4b7a21f07161239084280548216831790557fa48154dd5d6e3d137133de6afa2e32a49e49ecb516c0335da574194588e9d120805482168317905560086000527f374dc179ab22b15b16e95e8d09508d6170a7451c6357e0b730cf2e3e1d257f986020527f73558278389be84f9d64ff2a8ba48fefe3bcc1fc8bfc7f4d099a60cfc2f95fe8805490911690911790558015610d71576000805461ff00191690555b50505050565b33600090815260706020526040902054819060ff16610da85760405162461bcd60e51b815260040161052090611fbd565b336000908152606f60209081526040918290208251808401909352805483526001908101549183019190915290610ddf9083611505565b1115610dfd5760405162461bcd60e51b81526004016105209061206b565b8151600090815260676020908152604080832082860151845290915281206005015460ff16600b811115610e4157634e487b7160e01b600052602160045260246000fd5b1415610e815760405162461bcd60e51b815260206004820152600f60248201526e2a34b632903737ba10383937bb32b760891b6044820152606401610520565b336000908152606f60209081526040918290208451815590840151600190910155517f0fdaaa2b8b07a92479b35adb0552d262bd5e4f7bc415e99df1779b1612f8686290610ed0908490612095565b60405180910390a15050565b336000908152606c6020526040902054600a1115610f2e5760405162461bcd60e51b815260206004820152600f60248201526e139bdd08195b9bdd59da081ddbdbd9608a1b6044820152606401610520565b336000908152606c602052604081208054600a9290610f4e9084906122bb565b90915550610f5f905081600761112f565b50565b610f6a611b02565b81516000908152606760209081526040808320828601518452825291829020825160c081018452815460808201908152600183015460a083015281528351808501948590529093919284019160028085019182845b815481526020019060010190808311610fbf57505050918352505060048201546020820152600582015460409091019060ff16600b81111561101157634e487b7160e01b600052602160045260246000fd5b600b81111561103057634e487b7160e01b600052602160045260246000fd5b90525092915050565b80516000908152606e6020908152604080832082850151845290915290205461106390603c61222a565b4210156110a85760405162461bcd60e51b81526020600482015260136024820152722430b93b32b9ba34b733903a37b79039b7b7b760691b6044820152606401610520565b6110b381600861112f565b336000908152606b602052604081208054600392906110d390849061222a565b909155505080516000908152606e6020908152604080832093820151835292905220429055565b6069818154811061110a57600080fd5b60009182526020909120600290910201805460019091015490915082565b610f5f8160065b33600090815260706020526040902054829060ff166111605760405162461bcd60e51b815260040161052090611fbd565b336000908152606f602090815260409182902082518084019093528054835260019081015491830191909152906111979083611505565b11156111b55760405162461bcd60e51b81526004016105209061206b565b8251600090815260676020908152604080832082870151845290915281206005015460ff16600b8111156111f957634e487b7160e01b600052602160045260246000fd5b14156112395760405162461bcd60e51b815260206004820152600f60248201526e2a34b632903737ba10383937bb32b760891b6044820152606401610520565b8251600090815260676020908152604080832082870151845290915281206005015460ff169060689082600b81111561128257634e487b7160e01b600052602160045260246000fd5b600b8111156112a157634e487b7160e01b600052602160045260246000fd5b8152602001908152602001600020600084600b8111156112d157634e487b7160e01b600052602160045260246000fd5b600b8111156112f057634e487b7160e01b600052602160045260246000fd5b815260208101919091526040016000205460ff16151560011461134e5760405162461bcd60e51b815260206004820152601660248201527521b0b73737ba1036b0b5b2903a3930b739b4ba34b7b760511b6044820152606401610520565b835160009081526067602090815260408083208288015184529091529020600501805484919060ff1916600183600b81111561139a57634e487b7160e01b600052602160045260246000fd5b0217905550835160009081526067602090815260408083208288015184529091529081902090517f60987c6bdd72868f4e9d3ad06799309351c0b66076ffbc20cb70bf005ea77caa916113ec91612136565b60405180910390a150505050565b60606069805480602002602001604051908101604052809291908181526020016000905b828210156114645783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061141e565b50505050905090565b6033546001600160a01b031633146114975760405162461bcd60e51b815260040161052090612036565b6001600160a01b0381166114fc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610520565b610f5f81611915565b60006115238260200151846020015161151e919061227c565b6119e2565b825184516115349161151e9161227c565b61153e919061222a565b90505b92915050565b83516000908490849060029061155f9060329061227c565b6115699190612242565b61157390826121e9565b905060006028831115611588575060046115b7565b6025831115611599575060036115b7565b60208311156115aa575060026115b7565b601e8311156115b7575060015b6000602a8311156115ca575060026115d7565b60168311156115d7575060015b60008160028111156115f957634e487b7160e01b600052602160045260246000fd5b141561170c57600482600481111561162157634e487b7160e01b600052602160045260246000fd5b141561163457600994505050505061190d565b600382600481111561165657634e487b7160e01b600052602160045260246000fd5b141561166957600994505050505061190d565b600282600481111561168b57634e487b7160e01b600052602160045260246000fd5b141561169e57600994505050505061190d565b60018260048111156116c057634e487b7160e01b600052602160045260246000fd5b14156116e957600c8610156116dc57600b94505050505061190d565b600994505050505061190d565b60028610156116ff57600b94505050505061190d565b600194505050505061190d565b600181600281111561172e57634e487b7160e01b600052602160045260246000fd5b141561181e57600482600481111561175657634e487b7160e01b600052602160045260246000fd5b141561176957600994505050505061190d565b600382600481111561178b57634e487b7160e01b600052602160045260246000fd5b141561179e57600a94505050505061190d565b60028260048111156117c057634e487b7160e01b600052602160045260246000fd5b14156117e95760018610156117dc57600394505050505061190d565b600894505050505061190d565b600182600481111561180b57634e487b7160e01b600052602160045260246000fd5b14156116ff57600294505050505061190d565b600482600481111561184057634e487b7160e01b600052602160045260246000fd5b141561185357600a94505050505061190d565b600382600481111561187557634e487b7160e01b600052602160045260246000fd5b141561189e57600886101561189157600a94505050505061190d565b600294505050505061190d565b60028260048111156118c057634e487b7160e01b600052602160045260246000fd5b14156118d357600294505050505061190d565b60018260048111156118f557634e487b7160e01b600052602160045260246000fd5b14156116ff5760068610156118915760089450505050505b949350505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680611980575060005460ff16155b61199c5760405162461bcd60e51b815260040161052090611fe8565b600054610100900460ff161580156119be576000805461ffff19166101011790555b6119c66119fe565b6119ce611a68565b8015610f5f576000805461ff001916905550565b6000808212156119fa576119f5826122ed565b611541565b5090565b600054610100900460ff1680611a17575060005460ff16155b611a335760405162461bcd60e51b815260040161052090611fe8565b600054610100900460ff161580156119ce576000805461ffff19166101011790558015610f5f576000805461ff001916905550565b600054610100900460ff1680611a81575060005460ff16155b611a9d5760405162461bcd60e51b815260040161052090611fe8565b600054610100900460ff16158015611abf576000805461ffff19166101011790555b6119ce33611915565b8260028101928215611af6579160200282015b82811115611af6578251825591602001919060010190611adb565b506119fa929150611b5e565b6040805160c0810190915260006080820181815260a0830191909152815260208101611b2c611b73565b8152602001600081526020016000600b811115611b5957634e487b7160e01b600052602160045260246000fd5b905290565b5b808211156119fa5760008155600101611b5f565b60405180604001604052806002906020820280368337509192915050565b600082601f830112611ba1578081fd5b611ba961219d565b808385604086011115611bba578384fd5b835b6002811015611bdb578135845260209384019390910190600101611bbc565b509095945050505050565b8035600c8110611bf557600080fd5b919050565b600060408284031215611c0b578081fd5b6040516040810181811067ffffffffffffffff82111715611c2e57611c2e61231d565b604052823581526020928301359281019290925250919050565b600060208284031215611c59578081fd5b81356001600160a01b0381168114611c6f578182fd5b9392505050565b6000806000806101e0808688031215611c8d578384fd5b611c978787611b91565b9450604087605f880112611ca9578485fd5b611cb161219d565b8082890160c08a018b811115611cc5578889fd5b885b6002811015611cee57611cda8d84611b91565b855260209094019391850191600101611cc7565b50829850611cfc8c82611b91565b975050505050508661011f870112611d12578182fd5b611d1a6121c6565b80610100880189848a011115611d2e578485fd5b8493505b6007841015611d5257803583526001939093019260209283019201611d32565b509598949750929550505050565b600060208284031215611d71578081fd5b8151611c6f81612333565b60008060408385031215611d8e578182fd5b611d9783611be6565b9150611da560208401611be6565b90509250929050565b600080600060608486031215611dc2578283fd5b611dcb84611be6565b9250611dd960208501611be6565b91506040840135611de981612333565b809150509250925092565b600060408284031215611e05578081fd5b61153e8383611bfa565b60008060608385031215611e21578182fd5b611e2b8484611bfa565b9150611da560408401611be6565b600060208284031215611e4a578081fd5b5035919050565b60008060408385031215611e63578182fd5b50508035926020909101359150565b600080600060608486031215611e86578283fd5b505081359360208301359350604090920135919050565b8060005b6002811015610d71578151845260209384019390910190600101611ea1565b600c8110611ede57634e487b7160e01b600052602160045260246000fd5b9052565b602080825282518282018190526000919060409081850190868401855b82811015611f2c57611f1c84835180518252602090810151910152565b9284019290850190600101611eff565b5091979650505050505050565b6101e08101611f488287611e9d565b60408083018660005b6002811015611f7857611f65838351611e9d565b9183019160209190910190600101611f51565b50505050611f8960c0830185611e9d565b61010082018360005b6007811015611fb1578151835260209283019290910190600101611f92565b50505095945050505050565b602080825260119082015270141b185e595c881b9bdd081a5b9a5d1959607a1b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526010908201526f2637b1b0ba34b7b7103a37b7903330b960811b604082015260600190565b815181526020808301519082015260408101611541565b83518152602080850151908201526080810183604083015261190d6060830184611ec0565b8151805182526020908101519082015260c081016020808401516040840160005b600281101561210f578251825291830191908301906001016120f2565b5050505060408301516080830152606083015161212f60a0840182611ec0565b5092915050565b600060c0820190508254825260018084015460208181860152600291506040850182870160005b8481101561217857815483529183019190850190850161215d565b5050505050506004830154608083015260ff60058401541661212f60a0840182611ec0565b6040805190810167ffffffffffffffff811182821017156121c0576121c061231d565b60405290565b60405160e0810167ffffffffffffffff811182821017156121c0576121c061231d565b600080821280156001600160ff1b038490038513161561220b5761220b612307565b600160ff1b839003841281161561222457612224612307565b50500190565b6000821982111561223d5761223d612307565b500190565b60008261225d57634e487b7160e01b81526012600452602481fd5b600160ff1b82146000198414161561227757612277612307565b500590565b60008083128015600160ff1b85018412161561229a5761229a612307565b6001600160ff1b03840183138116156122b5576122b5612307565b50500390565b6000828210156122cd576122cd612307565b500390565b60006000198214156122e6576122e6612307565b5060010190565b6000600160ff1b82141561230357612303612307565b0390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8015158114610f5f57600080fdfea26469706673582212203f7e84a38a532adcc6a419b349e900b39102ba0166e5c75d25d4504c535b802b64736f6c63430008040033";

export interface TinyWorldLibraryAddresses {
  ["__$262fb0c830dbdf2a376562d26adc520444$__"]: string;
}
