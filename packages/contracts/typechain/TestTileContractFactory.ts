/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TestTileContract } from "./TestTileContract";

export class TestTileContractFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TestTileContract> {
    return super.deploy(overrides || {}) as Promise<TestTileContract>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestTileContract {
    return super.attach(address) as TestTileContract;
  }
  connect(signer: Signer): TestTileContractFactory {
    return super.connect(signer) as TestTileContractFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestTileContract {
    return new Contract(address, _abi, signerOrProvider) as TestTileContract;
  }
}

const _abi = [
  {
    inputs: [],
    name: "logger",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logger_a",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logger_b",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logger_c",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logger_d",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "inp",
        type: "string",
      },
    ],
    name: "test",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "inp",
        type: "uint256",
      },
    ],
    name: "test_a",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "inp",
        type: "bytes32",
      },
    ],
    name: "test_b",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inp",
        type: "bytes",
      },
    ],
    name: "test_c",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "inp",
        type: "address",
      },
    ],
    name: "test_d",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "tileABI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "tileDescription",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "tileEmoji",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "tileName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600560808190526468656c6c6f60d81b60a0908152620000289160009190620000a1565b50600560015569060f0626466686a6c6e760b31b600281905560408051808201909152600a80825260209091019182526200006691600391620000a1565b50600480546001600160a01b03191673f05b5f04b7a77ca549c0de06beaf257f40c66fdb1790553480156200009a57600080fd5b5062000184565b828054620000af9062000147565b90600052602060002090601f016020900481019282620000d357600085556200011e565b82601f10620000ee57805160ff19168380011785556200011e565b828001600101855582156200011e579182015b828111156200011e57825182559160200191906001019062000101565b506200012c92915062000130565b5090565b5b808211156200012c576000815560010162000131565b600181811c908216806200015c57607f821691505b602082108114156200017e57634e487b7160e01b600052602260045260246000fd5b50919050565b610c9b80620001946000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063726488831161008c578063b397abf211610066578063b397abf2146101f7578063f24ccbfe1461020a578063f6bc2b8a14610220578063f9fbd5541461024d57600080fd5b806372648883146101a15780637b64db2d146101d1578063986c2854146101e457600080fd5b8063565ef1e3116100c8578063565ef1e3146101515780635b51a6c2146101715780635f71a8b91461018657806370bceb381461019957600080fd5b806322098712146100ef5780632b9b2efa1461010d5780632f9ca46a1461011f575b600080fd5b6100f7610260565b60405161010491906109f8565b60405180910390f35b6002545b604051908152602001610104565b6100f761012d366004610917565b50604080518082019091526009815268546573742054696c6560b81b602082015290565b6101596102f2565b6040516001600160a01b039091168152602001610104565b61018461017f3660046108b9565b600255565b005b6100f7610194366004610917565b610333565b610111610354565b6101846101af36600461088b565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6101846101df3660046108d1565b610383565b6100f76101f2366004610917565b61039a565b6101846102053660046108b9565b600155565b6102126103dd565b604051610104929190610a63565b6100f761022e366004610917565b50604080518082019091526004815263f09f8c8360e01b602082015290565b61018461025b3660046108d1565b61055b565b60606003805461026f90610b25565b80601f016020809104026020016040519081016040528092919081815260200182805461029b90610b25565b80156102e85780601f106102bd576101008083540402835291602001916102e8565b820191906000526020600020905b8154815290600101906020018083116102cb57829003601f168201915b5050505050905090565b604080518082019091526002815261321d60f11b6020820152600454600091610323916001600160a01b031661056e565b506004546001600160a01b031690565b60606040518060c0016040528060948152602001610bd26094913992915050565b600061037c60405180604001604052806002815260200161309d60f11b8152506001546105b3565b5060015490565b805161039690600390602084019061077c565b5050565b60606103a982600001516105f8565b6103b683602001516105f8565b6040516020016103c7929190610991565b6040516020818303038152906040529050919050565b60606103fc604051806040016040528060008152602001600081525090565b6104ae604051806040016040528060068152602001653bb7b936321d60d11b8152506000805461042b90610b25565b80601f016020809104026020016040519081016040528092919081815260200182805461045790610b25565b80156104a45780601f10610479576101008083540402835291602001916104a4565b820191906000526020600020905b81548152906001019060200180831161048757829003601f168201915b505050505061071a565b600060405180604001604052806001815260200160028152508180546104d390610b25565b80601f01602080910402602001604051908101604052809291908181526020018280546104ff90610b25565b801561054c5780601f106105215761010080835404028352916020019161054c565b820191906000526020600020905b81548152906001019060200180831161052f57829003601f168201915b50505050509150915091509091565b805161039690600090602084019061077c565b6103968282604051602401610584929190610a0b565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905261075b565b61039682826040516024016105c9929190610a90565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905261075b565b60608161061c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610646578061063081610b60565b915061063f9050600a83610aca565b9150610620565b60008167ffffffffffffffff81111561066f57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610699576020820181803683370190505b5090505b8415610712576106ae600183610ade565b91506106bb600a86610b7b565b6106c6906030610ab2565b60f81b8183815181106106e957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535061070b600a86610aca565b945061069d565b949350505050565b6103968282604051602401610730929190610a35565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805461078890610b25565b90600052602060002090601f0160209004810192826107aa57600085556107f0565b82601f106107c357805160ff19168380011785556107f0565b828001600101855582156107f0579182015b828111156107f05782518255916020019190600101906107d5565b506107fc929150610800565b5090565b5b808211156107fc5760008155600101610801565b600067ffffffffffffffff8084111561083057610830610bbb565b604051601f8501601f19908116603f0116810190828211818310171561085857610858610bbb565b8160405280935085815286868601111561087157600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561089c578081fd5b81356001600160a01b03811681146108b2578182fd5b9392505050565b6000602082840312156108ca578081fd5b5035919050565b6000602082840312156108e2578081fd5b813567ffffffffffffffff8111156108f8578182fd5b8201601f81018413610908578182fd5b61071284823560208401610815565b600060408284031215610928578081fd5b6040516040810181811067ffffffffffffffff8211171561094b5761094b610bbb565b604052823581526020928301359281019290925250919050565b6000815180845261097d816020860160208601610af5565b601f01601f19169290920160200192915050565b7f74686973206973206120746573742074696c65206f6e20783a000000000000008152600083516109c9816019850160208801610af5565b62103c9d60e91b60199184019182015283516109ec81601c840160208801610af5565b01601c01949350505050565b6020815260006108b26020830184610965565b604081526000610a1e6040830185610965565b905060018060a01b03831660208301529392505050565b604081526000610a486040830185610965565b8281036020840152610a5a8185610965565b95945050505050565b606081526000610a766060830185610965565b905082516020830152602083015160408301529392505050565b604081526000610aa36040830185610965565b90508260208301529392505050565b60008219821115610ac557610ac5610b8f565b500190565b600082610ad957610ad9610ba5565b500490565b600082821015610af057610af0610b8f565b500390565b60005b83811015610b10578181015183820152602001610af8565b83811115610b1f576000848401525b50505050565b600181811c90821680610b3957607f821691505b60208210811415610b5a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610b7457610b74610b8f565b5060010190565b600082610b8a57610b8a610ba5565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe68747470733a2f2f676973742e67697468756275736572636f6e74656e742e636f6d2f6e616c696e626861726477616a2f65363361343138336539616235626338373566346466363636343336366636662f7261772f643962653064623461633863323932663334333039323363353732653765346538333832393735642f5465737454696c65436f6e74726163742e6a736f6ea26469706673582212200cf3d39d3e7d5dd16986b4a3950e4a90e92b64f769799d1c238382a786a8f6eb64736f6c63430008040033";
