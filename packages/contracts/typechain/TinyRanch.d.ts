/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface TinyRanchInterface extends ethers.utils.Interface {
  functions: {
    "currentPopulation(tuple)": FunctionFragment;
    "egg(tuple)": FunctionFragment;
    "feed(tuple)": FunctionFragment;
    "getProduce()": FunctionFragment;
    "milk(tuple)": FunctionFragment;
    "startRanch(string,tuple)": FunctionFragment;
    "tileABI(tuple)": FunctionFragment;
    "tileDescription(tuple)": FunctionFragment;
    "tileEmoji(tuple)": FunctionFragment;
    "tileName(tuple)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "currentPopulation",
    values: [{ x: BigNumberish; y: BigNumberish }]
  ): string;
  encodeFunctionData(
    functionFragment: "egg",
    values: [{ x: BigNumberish; y: BigNumberish }]
  ): string;
  encodeFunctionData(
    functionFragment: "feed",
    values: [{ x: BigNumberish; y: BigNumberish }]
  ): string;
  encodeFunctionData(
    functionFragment: "getProduce",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "milk",
    values: [{ x: BigNumberish; y: BigNumberish }]
  ): string;
  encodeFunctionData(
    functionFragment: "startRanch",
    values: [string, { x: BigNumberish; y: BigNumberish }]
  ): string;
  encodeFunctionData(
    functionFragment: "tileABI",
    values: [{ x: BigNumberish; y: BigNumberish }]
  ): string;
  encodeFunctionData(
    functionFragment: "tileDescription",
    values: [{ x: BigNumberish; y: BigNumberish }]
  ): string;
  encodeFunctionData(
    functionFragment: "tileEmoji",
    values: [{ x: BigNumberish; y: BigNumberish }]
  ): string;
  encodeFunctionData(
    functionFragment: "tileName",
    values: [{ x: BigNumberish; y: BigNumberish }]
  ): string;

  decodeFunctionResult(
    functionFragment: "currentPopulation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "egg", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "feed", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getProduce", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "milk", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "startRanch", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "tileABI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tileDescription",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tileEmoji", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "tileName", data: BytesLike): Result;

  events: {};
}

export class TinyRanch extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: TinyRanchInterface;

  functions: {
    currentPopulation(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "currentPopulation(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    egg(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "egg(tuple)"(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    feed(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "feed(tuple)"(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getProduce(overrides?: CallOverrides): Promise<{
      0: string;
      1: string;
    }>;

    "getProduce()"(overrides?: CallOverrides): Promise<{
      0: string;
      1: string;
    }>;

    milk(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "milk(tuple)"(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    startRanch(
      ranchType: string,
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "startRanch(string,tuple)"(
      ranchType: string,
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    tileABI(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "tileABI(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    tileDescription(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "tileDescription(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    tileEmoji(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "tileEmoji(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    tileName(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "tileName(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;
  };

  currentPopulation(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "currentPopulation(tuple)"(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  egg(
    selfCoords: { x: BigNumberish; y: BigNumberish },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "egg(tuple)"(
    selfCoords: { x: BigNumberish; y: BigNumberish },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  feed(
    selfCoords: { x: BigNumberish; y: BigNumberish },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "feed(tuple)"(
    selfCoords: { x: BigNumberish; y: BigNumberish },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getProduce(overrides?: CallOverrides): Promise<{
    0: string;
    1: string;
  }>;

  "getProduce()"(overrides?: CallOverrides): Promise<{
    0: string;
    1: string;
  }>;

  milk(
    selfCoords: { x: BigNumberish; y: BigNumberish },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "milk(tuple)"(
    selfCoords: { x: BigNumberish; y: BigNumberish },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  startRanch(
    ranchType: string,
    selfCoords: { x: BigNumberish; y: BigNumberish },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "startRanch(string,tuple)"(
    ranchType: string,
    selfCoords: { x: BigNumberish; y: BigNumberish },
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  tileABI(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<string>;

  "tileABI(tuple)"(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<string>;

  tileDescription(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<string>;

  "tileDescription(tuple)"(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<string>;

  tileEmoji(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<string>;

  "tileEmoji(tuple)"(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<string>;

  tileName(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<string>;

  "tileName(tuple)"(
    coords: { x: BigNumberish; y: BigNumberish },
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    currentPopulation(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "currentPopulation(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    egg(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<void>;

    "egg(tuple)"(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<void>;

    feed(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<void>;

    "feed(tuple)"(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<void>;

    getProduce(overrides?: CallOverrides): Promise<{
      0: string;
      1: string;
    }>;

    "getProduce()"(overrides?: CallOverrides): Promise<{
      0: string;
      1: string;
    }>;

    milk(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<void>;

    "milk(tuple)"(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<void>;

    startRanch(
      ranchType: string,
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<void>;

    "startRanch(string,tuple)"(
      ranchType: string,
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<void>;

    tileABI(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<string>;

    "tileABI(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<string>;

    tileDescription(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<string>;

    "tileDescription(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<string>;

    tileEmoji(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<string>;

    "tileEmoji(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<string>;

    tileName(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<string>;

    "tileName(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    currentPopulation(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "currentPopulation(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    egg(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<BigNumber>;

    "egg(tuple)"(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<BigNumber>;

    feed(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<BigNumber>;

    "feed(tuple)"(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<BigNumber>;

    getProduce(overrides?: CallOverrides): Promise<BigNumber>;

    "getProduce()"(overrides?: CallOverrides): Promise<BigNumber>;

    milk(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<BigNumber>;

    "milk(tuple)"(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<BigNumber>;

    startRanch(
      ranchType: string,
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<BigNumber>;

    "startRanch(string,tuple)"(
      ranchType: string,
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<BigNumber>;

    tileABI(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tileABI(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tileDescription(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tileDescription(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tileEmoji(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tileEmoji(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tileName(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tileName(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    currentPopulation(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "currentPopulation(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    egg(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "egg(tuple)"(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    feed(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "feed(tuple)"(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getProduce(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getProduce()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    milk(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "milk(tuple)"(
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    startRanch(
      ranchType: string,
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "startRanch(string,tuple)"(
      ranchType: string,
      selfCoords: { x: BigNumberish; y: BigNumberish },
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    tileABI(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tileABI(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tileDescription(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tileDescription(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tileEmoji(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tileEmoji(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tileName(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tileName(tuple)"(
      coords: { x: BigNumberish; y: BigNumberish },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
