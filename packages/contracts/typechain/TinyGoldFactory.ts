/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyGold } from "./TinyGold";

export class TinyGoldFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _mineshaft: string,
    _connectedWorld: string,
    overrides?: Overrides
  ): Promise<TinyGold> {
    return super.deploy(
      _mineshaft,
      _connectedWorld,
      overrides || {}
    ) as Promise<TinyGold>;
  }
  getDeployTransaction(
    _mineshaft: string,
    _connectedWorld: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mineshaft,
      _connectedWorld,
      overrides || {}
    );
  }
  attach(address: string): TinyGold {
    return super.attach(address) as TinyGold;
  }
  connect(signer: Signer): TinyGoldFactory {
    return super.connect(signer) as TinyGoldFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyGold {
    return new Contract(address, _abi, signerOrProvider) as TinyGold;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_mineshaft",
        type: "address",
      },
      {
        internalType: "contract TinyWorld",
        name: "_connectedWorld",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "miner",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010a2380380620010a2833981016040819052620000349162000185565b60405180604001604052806008815260200167151a5b9e51dbdb1960c21b815250604051806040016040528060048152602001631511d31160e21b81525082828281600390805190602001906200008d929190620000df565b508051620000a3906004906020840190620000df565b5050600580546001600160a01b039384166001600160a01b03199182161790915560068054979093169616959095179055506200021992505050565b828054620000ed90620001c3565b90600052602060002090601f0160209004810192826200011157600085556200015c565b82601f106200012c57805160ff19168380011785556200015c565b828001600101855582156200015c579182015b828111156200015c5782518255916020019190600101906200013f565b506200016a9291506200016e565b5090565b5b808211156200016a57600081556001016200016f565b6000806040838503121562000198578182fd5b8251620001a58162000200565b6020840151909250620001b88162000200565b809150509250929050565b600181811c90821680620001d857607f821691505b60208210811415620001fa57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03811681146200021657600080fd5b50565b610e7980620002296000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80636a627842116100715780636a6278421461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101e6565b6040516100ce9190610d6b565b60405180910390f35b6100ea6100e5366004610cb0565b610278565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610c75565b610290565b604051601281526020016100ce565b6100ea61013c366004610cb0565b6102b6565b61015461014f366004610c29565b6102f5565b005b6100fe610164366004610c29565b6001600160a01b031660009081526020819052604090205490565b6100c1610369565b6100ea610195366004610cb0565b610378565b6100ea6101a8366004610cb0565b610415565b6100fe6101bb366004610c43565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f590610e08565b80601f016020809104026020016040519081016040528092919081815260200182805461022190610e08565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b600033610286818585610423565b5060019392505050565b60003361029e858285610547565b6102a98585856105d9565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061028690829086906102f0908790610de4565b610423565b6006546001600160a01b031633146103545760405162461bcd60e51b815260206004820152601e60248201527f43616c6c6572206973206e6f742061206d696e6573686166742074696c65000060448201526064015b60405180910390fd5b61036681670de0b6b3a76400006107b2565b50565b6060600480546101f590610e08565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103fd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161034b565b61040a8286868403610423565b506001949350505050565b6000336102868185856105d9565b6001600160a01b0383166104855760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161034b565b6001600160a01b0382166104e65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161034b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146105d357818110156105c65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161034b565b6105d38484848403610423565b50505050565b6001600160a01b03831661063d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161034b565b6001600160a01b03821661069f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161034b565b6106aa83838361089d565b6001600160a01b038316600090815260208190526040902054818110156107225760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161034b565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610759908490610de4565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107a591815260200190565b60405180910390a36105d3565b6001600160a01b0382166108085760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161034b565b6108146000838361089d565b80600260008282546108269190610de4565b90915550506001600160a01b03821660009081526020819052604081208054839290610853908490610de4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03831615806108ba57506001600160a01b038216155b156108c457505050565b600554604051631a2986e560e31b81526001600160a01b0385811660048301529091169063d14c37289060240160206040518083038186803b15801561090957600080fd5b505afa15801561091d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109419190610cd9565b61098d5760405162461bcd60e51b815260206004820152601e60248201527f66726f6d206973206e6f7420616e20657867726173696120706c617965720000604482015260640161034b565b600554604051631a2986e560e31b81526001600160a01b0384811660048301529091169063d14c37289060240160206040518083038186803b1580156109d257600080fd5b505afa1580156109e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0a9190610cd9565b610a565760405162461bcd60e51b815260206004820152601c60248201527f746f206973206e6f7420616e20657867726173696120706c6179657200000000604482015260640161034b565b60055460405163cb7869fd60e01b81526001600160a01b038581166004830152600192169063993c157990829063cb7869fd90602401604080518083038186803b158015610aa357600080fd5b505afa158015610ab7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adb9190610cf9565b60055460405163cb7869fd60e01b81526001600160a01b0388811660048301529091169063cb7869fd90602401604080518083038186803b158015610b1f57600080fd5b505afa158015610b33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b579190610cf9565b6040518363ffffffff1660e01b8152600401610b74929190610dbe565b60206040518083038186803b158015610b8c57600080fd5b505afa158015610ba0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc49190610d53565b1115610c085760405162461bcd60e51b8152602060048201526013602482015272283630bcb2b9399030b932903a37b7903330b960691b604482015260640161034b565b505050565b80356001600160a01b0381168114610c2457600080fd5b919050565b600060208284031215610c3a578081fd5b6102af82610c0d565b60008060408385031215610c55578081fd5b610c5e83610c0d565b9150610c6c60208401610c0d565b90509250929050565b600080600060608486031215610c89578081fd5b610c9284610c0d565b9250610ca060208501610c0d565b9150604084013590509250925092565b60008060408385031215610cc2578182fd5b610ccb83610c0d565b946020939093013593505050565b600060208284031215610cea578081fd5b815180151581146102af578182fd5b600060408284031215610d0a578081fd5b6040516040810181811067ffffffffffffffff82111715610d3957634e487b7160e01b83526041600452602483fd5b604052825181526020928301519281019290925250919050565b600060208284031215610d64578081fd5b5051919050565b6000602080835283518082850152825b81811015610d9757858101830151858201604001528201610d7b565b81811115610da85783604083870101525b50601f01601f1916929092016040019392505050565b8251815260208084015181830152825160408301528201516060820152608081016102af565b60008219821115610e0357634e487b7160e01b81526011600452602481fd5b500190565b600181811c90821680610e1c57607f821691505b60208210811415610e3d57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220ba748fac1256487f77fbace60129a75353922b4c6d66cb02434e680270a625a764736f6c63430008040033";
