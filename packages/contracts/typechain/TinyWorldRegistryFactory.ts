/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorldRegistry } from "./TinyWorldRegistry";

export class TinyWorldRegistryFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TinyWorldRegistry> {
    return super.deploy(overrides || {}) as Promise<TinyWorldRegistry>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorldRegistry {
    return super.attach(address) as TinyWorldRegistry;
  }
  connect(signer: Signer): TinyWorldRegistryFactory {
    return super.connect(signer) as TinyWorldRegistryFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorldRegistry {
    return new Contract(address, _abi, signerOrProvider) as TinyWorldRegistry;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "appendWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_realAddress",
        type: "address",
      },
    ],
    name: "getProxyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxyAddress",
        type: "address",
      },
    ],
    name: "getRealAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "proxyAddressToRealAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "realAddressToProxyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxyAddress",
        type: "address",
      },
    ],
    name: "setProxyAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561056b806100326000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80635d7a59181161005b5780635d7a5918146101505780635dc8b5971461017957806369ddd67d1461018c578063fa2a5b01146101af57600080fd5b806308fc5d871461008d5780633af32abf146100d357806346a7dadc1461010f57806349fe72ed14610124575b600080fd5b6100b661009b366004610410565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ff6100e1366004610410565b6001600160a01b031660009081526001602052604090205460ff1690565b60405190151581526020016100ca565b61012261011d366004610410565b6101db565b005b6100b6610132366004610410565b6001600160a01b039081166000908152600360205260409020541690565b6100b661015e366004610410565b6002602052600090815260409020546001600160a01b031681565b610122610187366004610431565b610364565b6100ff61019a366004610410565b60016020526000908152604090205460ff1681565b6100b66101bd366004610410565b6001600160a01b039081166000908152600260205260409020541690565b3360009081526001602052604090205460ff166102535760405162461bcd60e51b815260206004820152602b60248201527f4f6e6c792077686974656c6973746564206164647265737365732063616e207060448201526a6c617920666f72206e6f7760a81b60648201526084015b60405180910390fd5b336000908152600260205260409020546001600160a01b0316156102b95760405162461bcd60e51b815260206004820152601960248201527f50726f7879206164647265737320616c72656164792073657400000000000000604482015260640161024a565b6001600160a01b0381811660009081526003602052604090205416156103215760405162461bcd60e51b815260206004820152601860248201527f5265616c206164647265737320616c7265616479207365740000000000000000604482015260640161024a565b33600081815260026020908152604080832080546001600160a01b039096166001600160a01b031996871681179091558352600390915290208054909216179055565b6000546001600160a01b0316331461037b57600080fd5b60005b81518110156103f05760018060008484815181106103ac57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806103e8816104f8565b91505061037e565b5050565b80356001600160a01b038116811461040b57600080fd5b919050565b600060208284031215610421578081fd5b61042a826103f4565b9392505050565b60006020808385031215610443578182fd5b823567ffffffffffffffff8082111561045a578384fd5b818501915085601f83011261046d578384fd5b81358181111561047f5761047f61051f565b8060051b604051601f19603f830116810181811085821117156104a4576104a461051f565b604052828152858101935084860182860187018a10156104c2578788fd5b8795505b838610156104eb576104d7816103f4565b8552600195909501949386019386016104c6565b5098975050505050505050565b600060001982141561051857634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a266584613ea1aab072091656172cc422ea606e51d6c81d2497a6fcb3b23f70764736f6c63430008040033";
