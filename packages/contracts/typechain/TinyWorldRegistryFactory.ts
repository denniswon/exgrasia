/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorldRegistry } from "./TinyWorldRegistry";

export class TinyWorldRegistryFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TinyWorldRegistry> {
    return super.deploy(overrides || {}) as Promise<TinyWorldRegistry>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorldRegistry {
    return super.attach(address) as TinyWorldRegistry;
  }
  connect(signer: Signer): TinyWorldRegistryFactory {
    return super.connect(signer) as TinyWorldRegistryFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorldRegistry {
    return new Contract(address, _abi, signerOrProvider) as TinyWorldRegistry;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "appendWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "realAddresses",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "proxyAddress",
        type: "address",
      },
    ],
    name: "dummySetProxyAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayerInfos",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_realAddress",
        type: "address",
      },
    ],
    name: "getProxyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxyAddress",
        type: "address",
      },
    ],
    name: "getRealAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "proxyAddressToRealAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "realAddressToProxyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxyAddress",
        type: "address",
      },
    ],
    name: "setProxyAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b031916331790556109c6806100326000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80635d7a5918116100665780635d7a5918146101795780635dc8b597146101a257806369ddd67d146101b55780639a2a9666146101d8578063fa2a5b01146101ee57600080fd5b806308fc5d87146100a3578063204b08ba146100e95780633af32abf146100fe57806346a7dadc1461013a57806349fe72ed1461014d575b600080fd5b6100cc6100b13660046107ef565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fc6100f736600461084b565b61021a565b005b61012a61010c3660046107ef565b6001600160a01b031660009081526002602052604090205460ff1690565b60405190151581526020016100e0565b6100fc6101483660046107ef565b6103ba565b6100cc61015b3660046107ef565b6001600160a01b039081166000908152600460205260409020541690565b6100cc6101873660046107ef565b6003602052600090815260409020546001600160a01b031681565b6100fc6101b0366004610810565b6104f1565b61012a6101c33660046107ef565b60026020526000908152604090205460ff1681565b6101e0610582565b6040516100e09291906108da565b6100cc6101fc3660046107ef565b6001600160a01b039081166000908152600360205260409020541690565b60005b82518110156103b557600083828151811061024857634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b0381166000908152600290925260409091205490915060ff166102995760405162461bcd60e51b815260040161029090610908565b60405180910390fd5b6001600160a01b0381811660009081526003602052604090205416156102fd5760405162461bcd60e51b8152602060048201526019602482015278141c9bde1e481859191c995cdcc8185b1c9958591e481cd95d603a1b6044820152606401610290565b6001600160a01b0383811660009081526004602052604090205416156103605760405162461bcd60e51b81526020600482015260186024820152771499585b081859191c995cdcc8185b1c9958591e481cd95d60421b6044820152606401610290565b6001600160a01b03908116600081815260036020908152604080832080549588166001600160a01b031996871681179091558352600490915290208054909216179055806103ad81610953565b91505061021d565b505050565b3360009081526002602052604090205460ff166103e95760405162461bcd60e51b815260040161029090610908565b336000908152600360205260409020546001600160a01b03161561044b5760405162461bcd60e51b8152602060048201526019602482015278141c9bde1e481859191c995cdcc8185b1c9958591e481cd95d603a1b6044820152606401610290565b6001600160a01b0381811660009081526004602052604090205416156104ae5760405162461bcd60e51b81526020600482015260186024820152771499585b081859191c995cdcc8185b1c9958591e481cd95d60421b6044820152606401610290565b33600081815260036020908152604080832080546001600160a01b039096166001600160a01b031996871681179091558352600490915290208054909216179055565b6000546001600160a01b0316331461050857600080fd5b60005b815181101561057e5760016002600084848151811061053a57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061057681610953565b91505061050b565b5050565b606080600060018054905067ffffffffffffffff8111156105b357634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156105dc578160200160208202803683370190505b5060015490915060009067ffffffffffffffff81111561060c57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610635578160200160208202803683370190505b50905060005b6001548110156107255760006001828154811061066857634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b03169050808483815181106106a957634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920181019190915282821660009081526003909152604090205484519116908490849081106106fa57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152508061071d81610953565b91505061063b565b50939092509050565b80356001600160a01b038116811461074557600080fd5b919050565b600082601f83011261075a578081fd5b8135602067ffffffffffffffff808311156107775761077761097a565b8260051b604051601f19603f8301168101818110848211171561079c5761079c61097a565b604052848152838101925086840182880185018910156107ba578687fd5b8692505b858310156107e3576107cf8161072e565b8452928401926001929092019184016107be565b50979650505050505050565b600060208284031215610800578081fd5b6108098261072e565b9392505050565b600060208284031215610821578081fd5b813567ffffffffffffffff811115610837578182fd5b6108438482850161074a565b949350505050565b6000806040838503121561085d578081fd5b823567ffffffffffffffff811115610873578182fd5b61087f8582860161074a565b92505061088e6020840161072e565b90509250929050565b6000815180845260208085019450808401835b838110156108cf5781516001600160a01b0316875295820195908201906001016108aa565b509495945050505050565b6040815260006108ed6040830185610897565b82810360208401526108ff8185610897565b95945050505050565b6020808252602b908201527f4f6e6c792077686974656c6973746564206164647265737365732063616e207060408201526a6c617920666f72206e6f7760a81b606082015260800190565b600060001982141561097357634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212201de8d717b1c31c8bfb29d464be16cd98970704a2775edaa31d5760e0b056cb7c64736f6c63430008040033";
