/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorldStorage } from "./TinyWorldStorage";

export class TinyWorldStorageFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TinyWorldStorage> {
    return super.deploy(overrides || {}) as Promise<TinyWorldStorage>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorldStorage {
    return super.attach(address) as TinyWorldStorage;
  }
  connect(signer: Signer): TinyWorldStorageFactory {
    return super.connect(signer) as TinyWorldStorageFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorldStorage {
    return new Contract(address, _abi, signerOrProvider) as TinyWorldStorage;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "originalTileType",
            type: "uint8",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "originalTileType",
            type: "uint8",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedTiles",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "originalTileType",
        type: "uint8",
      },
      {
        internalType: "enum TileType",
        name: "currentTileType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104b8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634400d97e1461005c5780637d94792a14610078578063dd96353114610081578063ea58cb23146100a4578063f276dc89146100b9575b600080fd5b61006560015481565b6040519081526020015b60405180910390f35b61006560005481565b61009461008f366004610362565b6100d9565b60405161006f9493929190610451565b6100ac610118565b60405161006f91906103f5565b6100cc6100c736600461037a565b610235565b60405161006f9190610443565b600381815481106100e957600080fd5b600091825260209091206003909102018054600182015460029092015490925060ff8082169161010090041684565b60606003805480602002602001604051908101604052809291908181526020016000905b8282101561022c578382906000526020600020906003020160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff1660028111156101a557634e487b7160e01b600052602160045260246000fd5b60028111156101c457634e487b7160e01b600052602160045260246000fd5b81526020016002820160019054906101000a900460ff1660028111156101fa57634e487b7160e01b600052602160045260246000fd5b600281111561021957634e487b7160e01b600052602160045260246000fd5b815250508152602001906001019061013c565b50505050905090565b61023d61031c565b600083815260026020818152604080842086855282529283902083516080810185528154815260018201549281019290925280830154919390929084019160ff169081111561029c57634e487b7160e01b600052602160045260246000fd5b60028111156102bb57634e487b7160e01b600052602160045260246000fd5b81526020016002820160019054906101000a900460ff1660028111156102f157634e487b7160e01b600052602160045260246000fd5b600281111561031057634e487b7160e01b600052602160045260246000fd5b90525090505b92915050565b604051806080016040528060008152602001600081526020016000600281111561035657634e487b7160e01b600052602160045260246000fd5b81526020016000905290565b600060208284031215610373578081fd5b5035919050565b6000806040838503121561038c578081fd5b50508035926020909101359150565b600381106103b957634e487b7160e01b600052602160045260246000fd5b9052565b805182526020810151602083015260408101516103dd604084018261039b565b5060608101516103f0606084018261039b565b505050565b6020808252825182820181905260009190848201906040850190845b81811015610437576104248385516103bd565b9284019260809290920191600101610411565b50909695505050505050565b6080810161031682846103bd565b848152602081018490526080810161046c604083018561039b565b610479606083018461039b565b9594505050505056fea2646970667358221220fa226cf17fee25f4c1d5cceec954cbf221157cb0a68adbfa45446929f552543764736f6c63430008040033";
