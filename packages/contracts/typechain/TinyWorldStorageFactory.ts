/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorldStorage } from "./TinyWorldStorage";

export class TinyWorldStorageFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TinyWorldStorage> {
    return super.deploy(overrides || {}) as Promise<TinyWorldStorage>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorldStorage {
    return super.attach(address) as TinyWorldStorage;
  }
  connect(signer: Signer): TinyWorldStorageFactory {
    return super.connect(signer) as TinyWorldStorageFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorldStorage {
    return new Contract(address, _abi, signerOrProvider) as TinyWorldStorage;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "breadScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cachedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "raritySeed",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "currentTileType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lastHarvested",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerInited",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerLocation",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedTiles",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TileType",
        name: "",
        type: "uint8",
      },
      {
        internalType: "enum TileType",
        name: "",
        type: "uint8",
      },
    ],
    name: "transitions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wheatScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "woodScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldScale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061072c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063d13e4f281161008c578063dd96353111610066578063dd96353114610245578063e79c5dab14610258578063ea58cb2314610278578063fc9cbb361461028d57600080fd5b8063d13e4f28146101f9578063d14c372814610202578063d4c2e7ac1461022557600080fd5b80639c2a1029116100c85780639c2a102914610134578063b173fd4014610172578063b38dbe6d146101ae578063bf44026d146101d957600080fd5b8063214300d6146100ef5780634400d97e146101225780637d94792a1461012b575b600080fd5b61010f6100fd3660046104f8565b60066020526000908152604090205481565b6040519081526020015b60405180910390f35b61010f60015481565b61010f60005481565b610162610142366004610526565b600360209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610119565b6101996101803660046104f8565b600a602052600090815260409020805460019091015482565b60408051928352602083019190915201610119565b61010f6101bc3660046105ca565b600960209081526000928352604080842090915290825290205481565b6101ec6101e7366004610558565b6102f0565b6040516101199190610691565b61010f60055481565b6101626102103660046104f8565b600b6020526000908152604090205460ff1681565b61010f6102333660046104f8565b60086020526000908152604090205481565b6101996102533660046105b2565b6103c9565b61010f6102663660046104f8565b60076020526000908152604090205481565b6102806103f7565b604051610119919061060d565b6102e161029b3660046105ca565b6002602090815260009283526040808420825291835291819020815180830190925280548252600181015492820192909252600482015460059092015490919060ff1683565b60405161011993929190610664565b6102f861046a565b81516000908152600260208181526040808420828701518552825292839020835160c081018552815460808201908152600183015460a0830152815284518086019586905290949193928501929091848201919082845b81548152602001906001019080831161034f57505050918352505060048201546020820152600582015460409091019060ff16600b8111156103a157634e487b7160e01b600052602160045260246000fd5b600b8111156103c057634e487b7160e01b600052602160045260246000fd5b90525092915050565b600481815481106103d957600080fd5b60009182526020909120600290910201805460019091015490915082565b60606004805480602002602001604051908101604052809291908181526020016000905b828210156104615783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061041b565b50505050905090565b6040805160c0810190915260006080820181815260a08301919091528152602081016104946104c6565b8152602001600081526020016000600b8111156104c157634e487b7160e01b600052602160045260246000fd5b905290565b60405180604001604052806002906020820280368337509192915050565b8035600c81106104f357600080fd5b919050565b600060208284031215610509578081fd5b81356001600160a01b038116811461051f578182fd5b9392505050565b60008060408385031215610538578081fd5b610541836104e4565b915061054f602084016104e4565b90509250929050565b600060408284031215610569578081fd5b6040516040810181811067ffffffffffffffff8211171561059857634e487b7160e01b83526041600452602483fd5b604052823581526020928301359281019290925250919050565b6000602082840312156105c3578081fd5b5035919050565b600080604083850312156105dc578182fd5b50508035926020909101359150565b600c811061060957634e487b7160e01b600052602160045260246000fd5b9052565b602080825282518282018190526000919060409081850190868401855b828110156106575761064784835180518252602090810151910152565b928401929085019060010161062a565b5091979650505050505050565b83518152602080850151908201526080810183604083015261068960608301846105eb565b949350505050565b8151805182526020908101519082015260c081016020808401516040840160005b60028110156106cf578251825291830191908301906001016106b2565b505050506040830151608083015260608301516106ef60a08401826105eb565b509291505056fea264697066735822122058af9668abc63ac77a1ce8f2610cb766b0201f00d9fe0881c995f624e1365b3f64736f6c63430008040033";
