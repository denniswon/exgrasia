/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorldStorage } from "./TinyWorldStorage";

export class TinyWorldStorageFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TinyWorldStorage> {
    return super.deploy(overrides || {}) as Promise<TinyWorldStorage>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorldStorage {
    return super.attach(address) as TinyWorldStorage;
  }
  connect(signer: Signer): TinyWorldStorageFactory {
    return super.connect(signer) as TinyWorldStorageFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorldStorage {
    return new Contract(address, _abi, signerOrProvider) as TinyWorldStorage;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cachedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "raritySeed",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "tileType",
        type: "uint8",
      },
      {
        internalType: "enum TemperatureType",
        name: "temperatureType",
        type: "uint8",
      },
      {
        internalType: "enum AltitudeType",
        name: "altitudeType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "emoji",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "smartContract",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "tileType",
            type: "uint8",
          },
          {
            internalType: "enum TemperatureType",
            name: "temperatureType",
            type: "uint8",
          },
          {
            internalType: "enum AltitudeType",
            name: "altitudeType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "emoji",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "smartContract",
            type: "address",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "tileType",
            type: "uint8",
          },
          {
            internalType: "enum TemperatureType",
            name: "temperatureType",
            type: "uint8",
          },
          {
            internalType: "enum AltitudeType",
            name: "altitudeType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "emoji",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "smartContract",
            type: "address",
          },
        ],
        internalType: "struct Tile[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "perlinMax",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerInited",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerLocation",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "raritySeed",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "tileType",
        type: "uint8",
      },
      {
        internalType: "enum TemperatureType",
        name: "temperatureType",
        type: "uint8",
      },
      {
        internalType: "enum AltitudeType",
        name: "altitudeType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "emoji",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "smartContract",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vecs",
    outputs: [
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vecsDenom",
    outputs: [
      {
        internalType: "int16",
        name: "",
        type: "int16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldScale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ec4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063bf44026d11610071578063bf44026d14610174578063d13e4f2814610194578063d14c37281461019d578063dd963531146101d0578063ea58cb23146101f8578063fc9cbb361461020d57600080fd5b80634400d97e146100b957806347b1361b146100d55780634c6179b8146100f55780637d94792a146101085780637dc3feb114610111578063b173fd4014610138575b600080fd5b6100c260015481565b6040519081526020015b60405180910390f35b6013546100e29060010b81565b60405160019190910b81526020016100cc565b6100e2610103366004610b86565b610220565b6100c260005481565b6013546101259062010000900461ffff1681565b60405161ffff90911681526020016100cc565b61015f610146366004610ae6565b6016602052600090815260409020805460019091015482565b604080519283526020830191909152016100cc565b610187610182366004610b14565b61025f565b6040516100cc9190610e2a565b6100c260025481565b6101c06101ab366004610ae6565b60176020526000908152604090205460ff1681565b60405190151581526020016100cc565b6101e36101de366004610b6e565b61052b565b6040516100cc99989796959493929190610d98565b6102006106c8565b6040516100cc9190610d37565b6101e361021b366004610b86565b6109c3565b6003826010811061023057600080fd5b01816002811061023f57600080fd5b60109182820401919006600202915091509054906101000a900460010b81565b610267610a2c565b8151600090815260146020908152604080832082860151845282529182902082516101808101845281546101408201908152600183015461016083015281528351808501948590529093919284019160028085019182845b8154815260200190600101908083116102bf57505050918352505060048201546020820152600582015460409091019060ff16600b81111561031157634e487b7160e01b600052602160045260246000fd5b600b81111561033057634e487b7160e01b600052602160045260246000fd5b81526020016005820160019054906101000a900460ff16600281111561036657634e487b7160e01b600052602160045260246000fd5b600281111561038557634e487b7160e01b600052602160045260246000fd5b81526020016005820160029054906101000a900460ff1660048111156103bb57634e487b7160e01b600052602160045260246000fd5b60048111156103da57634e487b7160e01b600052602160045260246000fd5b81526020016006820180546103ee90610e3d565b80601f016020809104026020016040519081016040528092919081815260200182805461041a90610e3d565b80156104675780601f1061043c57610100808354040283529160200191610467565b820191906000526020600020905b81548152906001019060200180831161044a57829003601f168201915b5050505050815260200160078201805461048090610e3d565b80601f01602080910402602001604051908101604052809291908181526020018280546104ac90610e3d565b80156104f95780601f106104ce576101008083540402835291602001916104f9565b820191906000526020600020905b8154815290600101906020018083116104dc57829003601f168201915b505050918352505060088201546001600160a01b03908116602083015260099092015490911660409091015292915050565b6015818154811061053b57600080fd5b600091825260209182902060408051808201909152600a909202018054825260018101549282019290925260048201546005830154600684018054939550919360ff80831694610100840482169462010000909404909116929061059e90610e3d565b80601f01602080910402602001604051908101604052809291908181526020018280546105ca90610e3d565b80156106175780601f106105ec57610100808354040283529160200191610617565b820191906000526020600020905b8154815290600101906020018083116105fa57829003601f168201915b50505050509080600701805461062c90610e3d565b80601f016020809104026020016040519081016040528092919081815260200182805461065890610e3d565b80156106a55780601f1061067a576101008083540402835291602001916106a5565b820191906000526020600020905b81548152906001019060200180831161068857829003601f168201915b50505050600883015460099093015491926001600160a01b039081169216905089565b60606015805480602002602001604051908101604052809291908181526020016000905b828210156109ba5760008481526020908190206040805161018081018252600a86029092018054610140840190815260018201546101608501528352815180830192839052929390929084019160028085019182845b81548152602001906001019080831161074257505050918352505060048201546020820152600582015460409091019060ff16600b81111561079457634e487b7160e01b600052602160045260246000fd5b600b8111156107b357634e487b7160e01b600052602160045260246000fd5b81526020016005820160019054906101000a900460ff1660028111156107e957634e487b7160e01b600052602160045260246000fd5b600281111561080857634e487b7160e01b600052602160045260246000fd5b81526020016005820160029054906101000a900460ff16600481111561083e57634e487b7160e01b600052602160045260246000fd5b600481111561085d57634e487b7160e01b600052602160045260246000fd5b815260200160068201805461087190610e3d565b80601f016020809104026020016040519081016040528092919081815260200182805461089d90610e3d565b80156108ea5780601f106108bf576101008083540402835291602001916108ea565b820191906000526020600020905b8154815290600101906020018083116108cd57829003601f168201915b5050505050815260200160078201805461090390610e3d565b80601f016020809104026020016040519081016040528092919081815260200182805461092f90610e3d565b801561097c5780601f106109515761010080835404028352916020019161097c565b820191906000526020600020905b81548152906001019060200180831161095f57829003601f168201915b505050918352505060088201546001600160a01b039081166020808401919091526009909301541660409091015290825260019290920191016106ec565b50505050905090565b6014602090815260009283526040808420825291835291819020815180830190925280548252600181015492820192909252600482015460058301546006840180549394929360ff80841694610100850482169462010000900490911692909161059e90610e3d565b60408051610180810190915260006101408201818152610160830191909152815260208101610a59610ac8565b8152602001600081526020016000600b811115610a8657634e487b7160e01b600052602160045260246000fd5b81526020016000815260200160008152602001606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b60405180604001604052806002906020820280368337509192915050565b600060208284031215610af7578081fd5b81356001600160a01b0381168114610b0d578182fd5b9392505050565b600060408284031215610b25578081fd5b6040516040810181811067ffffffffffffffff82111715610b5457634e487b7160e01b83526041600452602483fd5b604052823581526020928301359281019290925250919050565b600060208284031215610b7f578081fd5b5035919050565b60008060408385031215610b98578081fd5b50508035926020909101359150565b8060005b6002811015610bca578151845260209384019390910190600101610bab565b50505050565b60058110610be057610be0610e78565b9052565b60038110610be057610be0610e78565b600c8110610be057610be0610e78565b60008151808452815b81811015610c2957602081850181015186830182015201610c0d565b81811115610c3a5782602083870101525b50601f01601f19169290920160200192915050565b6000610180610c6984845180518252602090810151910152565b6020830151610c7b6040860182610ba7565b50604083015160808501526060830151610c9860a0860182610bf4565b506080830151610cab60c0860182610be4565b5060a0830151610cbe60e0860182610bd0565b5060c08301516101008281870152610cd883870183610c04565b925060e0850151915061012086840381880152610cf58484610c04565b9350818601519250610d136101408801846001600160a01b03169052565b8501516001600160a01b0381166101608801529150610d2f9050565b509392505050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b82811015610d8b57603f19888603018452610d79858351610c4f565b94509285019290850190600101610d5d565b5092979650505050505050565b895181526020808b01519082015260006101408a6040840152610dbe606084018b610bf4565b610dcb608084018a610be4565b610dd860a0840189610bd0565b8060c0840152610dea81840188610c04565b905082810360e0840152610dfe8187610c04565b6001600160a01b0395861661010085015293909416610120909201919091525098975050505050505050565b602081526000610b0d6020830184610c4f565b600181811c90821680610e5157607f821691505b60208210811415610e7257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220f84a40ea1b3b21a705753a602eedde134415ecba360f168dd2e2cd92a52764e264736f6c63430008040033";
