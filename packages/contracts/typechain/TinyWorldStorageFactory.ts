/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorldStorage } from "./TinyWorldStorage";

export class TinyWorldStorageFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TinyWorldStorage> {
    return super.deploy(overrides || {}) as Promise<TinyWorldStorage>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorldStorage {
    return super.attach(address) as TinyWorldStorage;
  }
  connect(signer: Signer): TinyWorldStorageFactory {
    return super.connect(signer) as TinyWorldStorageFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorldStorage {
    return new Contract(address, _abi, signerOrProvider) as TinyWorldStorage;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        internalType: "enum TileType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610117806100206000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80634400d97e1460415780637d94792a14605c578063f276dc89146064575b600080fd5b604960015481565b6040519081526020015b60405180910390f35b604960005481565b608f606f366004609a565b600091825260026020908152604080842092845291905290205460ff1690565b6040516053919060ba565b6000806040838503121560ab578182fd5b50508035926020909101359150565b602081016003831060db57634e487b7160e01b600052602160045260246000fd5b9190529056fea26469706673582212208cb0d3d251b9fa3083d9a7dc65d0d5d9603ac5637c013c5c1d5aaa83e1fb347064736f6c63430008040033";
