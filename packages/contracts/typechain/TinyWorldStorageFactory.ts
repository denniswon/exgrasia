/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TinyWorldStorage } from "./TinyWorldStorage";

export class TinyWorldStorageFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TinyWorldStorage> {
    return super.deploy(overrides || {}) as Promise<TinyWorldStorage>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TinyWorldStorage {
    return super.attach(address) as TinyWorldStorage;
  }
  connect(signer: Signer): TinyWorldStorageFactory {
    return super.connect(signer) as TinyWorldStorageFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TinyWorldStorage {
    return new Contract(address, _abi, signerOrProvider) as TinyWorldStorage;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cachedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "raritySeed",
        type: "uint256",
      },
      {
        internalType: "enum TileType",
        name: "currentTileType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords",
        name: "coords",
        type: "tuple",
      },
    ],
    name: "getCachedTile",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct Coords",
            name: "coords",
            type: "tuple",
          },
          {
            internalType: "uint256[2]",
            name: "perlin",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "raritySeed",
            type: "uint256",
          },
          {
            internalType: "enum TileType",
            name: "currentTileType",
            type: "uint8",
          },
        ],
        internalType: "struct Tile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTouchedTiles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Coords[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lastHarvested",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "touchedTiles",
    outputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TileType",
        name: "",
        type: "uint8",
      },
      {
        internalType: "enum TileType",
        name: "",
        type: "uint8",
      },
    ],
    name: "transitions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wheatScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "woodScore",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldScale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "worldWidth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610681806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063bf44026d11610071578063bf44026d1461015c578063d13e4f281461017c578063dd96353114610185578063e79c5dab146101ad578063ea58cb23146101cd578063fc9cbb36146101e257600080fd5b8063214300d6146100ae5780634400d97e146100e15780637d94792a146100ea5780639c2a1029146100f3578063b38dbe6d14610131575b600080fd5b6100ce6100bc36600461044d565b60066020526000908152604090205481565b6040519081526020015b60405180910390f35b6100ce60015481565b6100ce60005481565b61012161010136600461047b565b600360209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100d8565b6100ce61013f36600461051f565b600760209081526000928352604080842090915290825290205481565b61016f61016a3660046104ad565b610245565b6040516100d891906105e6565b6100ce60055481565b610198610193366004610507565b61031e565b604080519283526020830191909152016100d8565b6100ce6101bb36600461044d565b60086020526000908152604090205481565b6101d561034c565b6040516100d89190610562565b6102366101f036600461051f565b6002602090815260009283526040808420825291835291819020815180830190925280548252600181015492820192909252600482015460059092015490919060ff1683565b6040516100d8939291906105b9565b61024d6103bf565b81516000908152600260208181526040808420828701518552825292839020835160c081018552815460808201908152600183015460a0830152815284518086019586905290949193928501929091848201919082845b8154815260200190600101908083116102a457505050918352505060048201546020820152600582015460409091019060ff1660078111156102f657634e487b7160e01b600052602160045260246000fd5b600781111561031557634e487b7160e01b600052602160045260246000fd5b90525092915050565b6004818154811061032e57600080fd5b60009182526020909120600290910201805460019091015490915082565b60606004805480602002602001604051908101604052809291908181526020016000905b828210156103b657838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610370565b50505050905090565b6040805160c0810190915260006080820181815260a08301919091528152602081016103e961041b565b8152602001600081526020016000600781111561041657634e487b7160e01b600052602160045260246000fd5b905290565b60405180604001604052806002906020820280368337509192915050565b80356008811061044857600080fd5b919050565b60006020828403121561045e578081fd5b81356001600160a01b0381168114610474578182fd5b9392505050565b6000806040838503121561048d578081fd5b61049683610439565b91506104a460208401610439565b90509250929050565b6000604082840312156104be578081fd5b6040516040810181811067ffffffffffffffff821117156104ed57634e487b7160e01b83526041600452602483fd5b604052823581526020928301359281019290925250919050565b600060208284031215610518578081fd5b5035919050565b60008060408385031215610531578182fd5b50508035926020909101359150565b6008811061055e57634e487b7160e01b600052602160045260246000fd5b9052565b602080825282518282018190526000919060409081850190868401855b828110156105ac5761059c84835180518252602090810151910152565b928401929085019060010161057f565b5091979650505050505050565b8351815260208085015190820152608081018360408301526105de6060830184610540565b949350505050565b8151805182526020908101519082015260c081016020808401516040840160005b600281101561062457825182529183019190830190600101610607565b5050505060408301516080830152606083015161064460a0840182610540565b509291505056fea26469706673582212200c921773edec885b975de55ef22296de4e62fd56a6786bb398cfe50663871f4d64736f6c63430008040033";
